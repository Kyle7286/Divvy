{"version":3,"sources":["components/Row/index.js","components/Column/index.js","components/Navbar/index.js","components/Wrapper/index.js","components/Container/index.js","components/LoginCard/index.js","utils/API.js","pages/Login/index.js","components/SectionHeader/index.js","components/SignupCard/index.js","pages/Signup/index.js","components/HomePageCard/index.js","pages/Home/index.js","components/ProfileForm/index.js","components/Progress-Bar/index.js","components/RewardsContainer/index.js","pages/Profile/index.js","components/CommentDiv/index.js","components/CommentsContainer/index.js","components/ManageTicketModal/index.js","components/CreateTicketModal/index.js","components/TicketTable/index.js","components/TicketTableMobile/index.js","components/EmployeeCard/index.js","components/EmployeeCardContainer/index.js","components/StatCard/index.js","components/StatCardContainer/index.js","pages/Dashboard/index.js","components/NewClientForm/index.js","components/NewTeamForm/index.js","components/NewEmpForm/index.js","pages/Org/index.js","pages/Team/index.js","App.js","index.js"],"names":["Row","props","className","data-component","Col","Mobile","children","useMediaQuery","maxWidth","Default","minWidth","Navbar","loggedIn","loggedInStatus","checkRole","currentUser","role","is_manager","to","xmlns","width","height","fill","viewBox","fillRule","d","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","href","id","onClick","handleLogout","exact","first_name","last_name","Wrapper","Container","LoginCard","class","for","autoComplete","handleFormSubmit","style","color","axios","get","newTicket","post","updatedTicket","put","delete","newComment","newUser","newEmployee","console","log","newClient","newTeam","email","password","newOrg","emailOptions","Login","event","preventDefault","document","querySelector","value","trim","API","then","res","window","location","catch","err","getElementById","innerHTML","response","data","message","this","Component","SectionHeader","SignupCard","firstName","React","createRef","lastName","orgName","phoneNumber","Form","Group","controlId","xs","Control","ref","placeholder","Button","variant","block","name","current","orgID","org_id","phone_number","profile_icon","sendWelcomeEmail","subject","alert","createUser","createOrg","Signup","HomePageCard","history","useHistory","push","Home","ProfileForm","htmlFor","latestFirstName","defaultValue","singleuser","aria-describedby","latestLastName","latestEmail","latestPhone","disabled","error","visible","ProgressBar","points","fillerStyles","calculatePercentLeft","backgroundColor","borderRadius","textAlign","i","rewards","length","req_points","Math","floor","padding","fontWeight","RewardsContainer","map","reward","idx","fontSize","Profile","useState","user","setUser","setError","picture","setPicture","setRewards","ticketData","setPoints","getUser","updateError","updatePicture","useEffect","callUpdateUser","obj","JSON","parse","request","errors","latestURL","e","src","alt","CommentsDiv","divClassName","nameClassName","comment","date","dayjs","require","CommentsContantainer","comments","currentUserId","CommentDiv","date_created","format","user_id","ManageTicketModal","allEmployees","allUsers","filter","visability","setVisablity","isTicketShowing","setisTicketShowing","isClientShowing","setisClientShowing","isCommentShowing","setisCommentShowing","isNewCommentShowing","setisNewCommentShowing","recentComments","setRecentComments","recentCommentsCount","setRecentCommentsCount","closeModal","latestPriority","latestStatus","latestAssignee","latestDescription","newCommentTextArea","recentComment","currentUserName","cancelNewComment","Modal","show","onHide","Header","closeButton","Title","ticketID","ticketTitle","Body","undefined","ticketComments","ticketPriority","ticketStatus","data-user-id","ticketAssignee","employee","ticketDescription","readOnly","ticketFirm","ticketFirmContact","ticketFirmPhone","rows","ticket_id","date_modified","data-tester","concat","Footer","confirmDelete","prompt","reload","priority","status","assigned_to","selectedIndex","getAttribute","description","CreateTicketModal","allClients","client","Priority","Status","Assignee","Description","Client","data-client-id","title","client_id","team_id","GlobalFilter","globalFilter","setGlobalFilter","setValue","onChange","useAsyncDebounce","target","Table","columns","filterTypes","useMemo","text","filterValue","row","rowValue","values","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","headerGroups","prepareRow","state","preGlobalFilteredRows","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","TicketTable","createTicketModal","ticket","allTickets","button","ticketuser","ticketAssigneeId","contact","firm","contact_name","contact_phone","assignee","accessor","disableSortBy","defaultPageSize","TicketTableMobile","EmployeeCard","tag","handleClick","data-vl","employeeID","data-type","ID","cursor","employeeTickets","profileIcon","employeeName","EmployeeCardContainer","setBadgeColorByWeight","ticketsNotClosed","weight","element","sort","a","b","index","activeTicketCount","StatCard","amount","StatCardContainer","totalTickets","assignedTicketCount","openTicketCount","unassignedTicketCount","completedTicketCount","Dashboard","tickets","setTickets","setCurrentUser","users","setUsers","clients","setClients","countTicketAssigned","setCountTicketAssigned","countTicketActive","setCountTicketActive","countTicketOpen","setCountTicketOpen","countTicketUnassigned","setCountTicketUnassigned","countTicketCompleted","setCountTicketCompleted","getTickets","filterType","resTickets","resUser","filteredTickets","ticketsData","assignedTickets","activeTickets","openTickets","unassignedTickets","filteredTicketsFinal","completedTickets","borderColor","dataset","vl","statCards","querySelectorAll","employeeCards","parseInt","x","teamEmployees","NewTeamForm","refFirm","refFirstName","refLastName","refEmail","refPhone","refAdd1","refAdd2","refCity","refState","refZip","handleNewClientSubmit","handleCreateClick","refTeamName","handleNewTeamSubmit","NewEmpForm","teams","refTeamSelected","team","refIsManager","refEmpFirstName","refEmpLastName","refEmpEmail","refEmpPhone","handleNewEmpSubmit","Org","org","setOrg","setTeams","getTeams","setIsClientShowing","isTeamShowing","setIsTeamShowing","isEmployeeShowing","setIsEmployeeShowing","includes","emp","setVisible","prevCheck","temp","_","mapObject","NewClientForm","add1","add2","city","zip","Team","App","setloggedIn","logStatus","path","component","ReactDOM"],"mappings":"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","file":"static/js/main.297a06b2.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Here I specify a Row and give it some basic bootstrap classes, \n    Then I pass props within that div (which is defined on my directory page\n    as the Column component\n*/\n\nfunction Row (props) {\n  return <div className=\"row\" data-component = \"Row\" {...props} />;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default Row;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Here I specify a Col and give it some basic bootstrap classes, \n    Then I pass props within that div (which is defined on my directory page\n    as the md size??\n*/\n\nfunction Col (props) {\n  return <div className=\"col-md\" data-component=\"Col\" {...props} />;\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default Col;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useMediaQuery } from 'react-responsive';\nimport \"./style.css\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n/* ----Define Queries For Rendering Mobile Nav or Non-Mobile(default) Nav---- */\n\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* ------------- Define Main Nav Component (one mobile one not) ------------- */\n\nfunction Navbar(props) {\n\n    const { loggedIn } = props.loggedInStatus;\n\n    function checkRole() {\n        if (props.currentUser.role === \"Admin\" || props.currentUser.is_manager) {\n            return (\n                <li className=\" nav-item my-2 text-center\">\n                    <NavLink to=\"/org\" className=\"nav-link ps-2\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-diagram-3-fill\" viewBox=\"0 0 16 16\">\n                            <path fillRule=\"evenodd\" d=\"M6 3.5A1.5 1.5 0 0 1 7.5 2h1A1.5 1.5 0 0 1 10 3.5v1A1.5 1.5 0 0 1 8.5 6v1H14a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 2 7h5.5V6A1.5 1.5 0 0 1 6 4.5v-1zm-6 8A1.5 1.5 0 0 1 1.5 10h1A1.5 1.5 0 0 1 4 11.5v1A1.5 1.5 0 0 1 2.5 14h-1A1.5 1.5 0 0 1 0 12.5v-1zm6 0A1.5 1.5 0 0 1 7.5 10h1a1.5 1.5 0 0 1 1.5 1.5v1A1.5 1.5 0 0 1 8.5 14h-1A1.5 1.5 0 0 1 6 12.5v-1zm6 0a1.5 1.5 0 0 1 1.5-1.5h1a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5h-1a1.5 1.5 0 0 1-1.5-1.5v-1z\" />\n                        </svg>\n                        <div>\n                            Organization\n                </div>\n                    </NavLink>\n                </li>\n            )\n        }\n        else {\n            return;\n        }\n    };\n\n    return (\n        <>\n            {/*This is what will render below mobile breakpoint for navbar*/}\n            < Mobile >\n                <nav className=\"navbar bg-dark navbar-expand-lg navbar-dark\" data-component=\"Navbar\">\n                    <div>\n                        <button className=\"navbar-toggler mr-3\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <a className=\"navbar-brand mx-auto\" href=\"/\">Divvy</a>\n                        <div className=\"collapse navbar-collapse text-center justify-content-center\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav flex-row justify-content-center\">\n                                {!loggedIn ?\n                                    <>\n                                        <li className=\"nav-item px-0 my-2 text-center mr-4\" href=\"/\">\n                                            <NavLink to=\"/\" exact={true} className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\" />\n                                                </svg>\n                                                <div>\n                                                    Home\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                        <li className=\" nav-item my-2 text-center mr-2\">\n                                            <NavLink to=\"/login\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-box-arrow-in-right\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\" />\n                                                </svg>\n                                                <div>\n                                                    Login\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                    </> :\n                                    <>\n                                        <li className=\"nav-item px-0 my-2 text-center\" href=\"/dasboard\">\n                                            <NavLink to=\"/dashboard\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-speedometer\" viewBox=\"0 0 16 16\">\n                                                    <path d=\"M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2zM3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.389.389 0 0 0-.029-.518z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.945 11.945 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0z\" />\n                                                </svg>\n                                                <div>\n                                                    Dashboard\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                        {checkRole()}\n                                        {/* <li className=\" nav-item my-2 text-center\">\n                                            <NavLink to=\"/org\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-diagram-3-fill\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"M6 3.5A1.5 1.5 0 0 1 7.5 2h1A1.5 1.5 0 0 1 10 3.5v1A1.5 1.5 0 0 1 8.5 6v1H14a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 2 7h5.5V6A1.5 1.5 0 0 1 6 4.5v-1zm-6 8A1.5 1.5 0 0 1 1.5 10h1A1.5 1.5 0 0 1 4 11.5v1A1.5 1.5 0 0 1 2.5 14h-1A1.5 1.5 0 0 1 0 12.5v-1zm6 0A1.5 1.5 0 0 1 7.5 10h1a1.5 1.5 0 0 1 1.5 1.5v1A1.5 1.5 0 0 1 8.5 14h-1A1.5 1.5 0 0 1 6 12.5v-1zm6 0a1.5 1.5 0 0 1 1.5-1.5h1a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5h-1a1.5 1.5 0 0 1-1.5-1.5v-1z\" />\n                                                </svg>\n                                                <div>\n                                                    Org\n                                            </div>\n                                            </NavLink>\n                                        </li> */}\n                                        {/* <li className=\" nav-item my-2 text-cente mr-4\">\n                                            <NavLink to=\"/team\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-people-fill\" viewBox=\"0 0 16 16\">\n                                                    <path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z\" />\n                                                    <path d=\"M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\n                                                </svg>\n                                                <div>\n                                                    Team\n                                            </div>\n                                            </NavLink>\n                                        </li> */}\n                                        <li className=\" nav-item my-2 text-center mr-2\">\n                                            <NavLink to=\"/profile\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\n                                                    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\" />\n                                                </svg>\n                                                <div>\n                                                    Profile\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                        <li className=\" nav-item my-2 text-center mr-2\">\n                                            <NavLink onClick={props.handleLogout} to=\"/logout\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\" />\n                                                </svg>\n                                                <div>\n                                                    Logout\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                    </>\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </Mobile>\n\n            {/*This is what will render above mobile breakpoint for navbar*/}\n            <Default>\n                <nav className=\"navbar flex-md-column bg-dark navbar-expand-lg navbar-dark pt-0 vh-100\" data-component=\"Navbar\">\n                    <div>\n                        <button className=\"navbar-toggler mr-3\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"text-warning text-center fw-bold fst-italic fs-1 mt-2 divvy-font-logo\">Divvy</div>\n                        \n\n                        <div className=\"collapse navbar-collapse flex-column\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav flex-column\">\n                                {!loggedIn ?\n                                    <>\n                                        <li className=\"nav-item px-0 my-2 text-center\" href=\"/\">\n                                            <NavLink to=\"/\" exact={true} className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\" />\n                                                </svg>\n                                                <div>\n                                                    Home\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                        <li className=\" nav-item my-2 text-center\">\n                                            <NavLink to=\"/login\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-box-arrow-in-right\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\" />\n                                                </svg>\n                                                <div>\n                                                    Login\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                    </> :\n                                    <>\n                                        <li className=\"nav-item px-0 my-2 text-center\" href=\"/dasboard\">\n                                            <NavLink to=\"/dashboard\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-speedometer\" viewBox=\"0 0 16 16\">\n                                                    <path d=\"M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2zM3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.389.389 0 0 0-.029-.518z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.945 11.945 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0z\" />\n                                                </svg>\n                                                <div>\n                                                    Dashboard\n                                        </div>\n                                            </NavLink>\n                                        </li>\n                                        {checkRole()}\n                                        {/* <li className=\" nav-item my-2 text-center\">\n                                            <NavLink to=\"/org\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-diagram-3-fill\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"M6 3.5A1.5 1.5 0 0 1 7.5 2h1A1.5 1.5 0 0 1 10 3.5v1A1.5 1.5 0 0 1 8.5 6v1H14a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0V8h-5v.5a.5.5 0 0 1-1 0v-1A.5.5 0 0 1 2 7h5.5V6A1.5 1.5 0 0 1 6 4.5v-1zm-6 8A1.5 1.5 0 0 1 1.5 10h1A1.5 1.5 0 0 1 4 11.5v1A1.5 1.5 0 0 1 2.5 14h-1A1.5 1.5 0 0 1 0 12.5v-1zm6 0A1.5 1.5 0 0 1 7.5 10h1a1.5 1.5 0 0 1 1.5 1.5v1A1.5 1.5 0 0 1 8.5 14h-1A1.5 1.5 0 0 1 6 12.5v-1zm6 0a1.5 1.5 0 0 1 1.5-1.5h1a1.5 1.5 0 0 1 1.5 1.5v1a1.5 1.5 0 0 1-1.5 1.5h-1a1.5 1.5 0 0 1-1.5-1.5v-1z\" />\n                                                </svg>\n                                                <div>\n                                                    Org\n                                            </div>\n                                            </NavLink>\n                                        </li> */}\n                                        {/* <li className=\" nav-item my-2 text-center\">\n                                            <NavLink to=\"/team\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-people-fill\" viewBox=\"0 0 16 16\">\n                                                    <path d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z\" />\n                                                    <path d=\"M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\n                                                </svg>\n                                                <div>\n                                                    Team\n                                            </div>\n                                            </NavLink>\n                                        </li> */}\n                                        <li className=\" nav-item my-2 text-center\">\n                                            <NavLink to=\"/profile\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\n                                                    <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\" />\n                                                </svg>\n                                                <div>\n                                                    Profile\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                        <li className=\" nav-item my-2 text-center\">\n                                            <NavLink onClick={props.handleLogout} to=\"/logout\" className=\"nav-link ps-2\">\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\n                                                    <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z\" />\n                                                    <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\" />\n                                                </svg>\n                                                <div>\n                                                    Logout\n                                            </div>\n                                            </NavLink>\n                                        </li>\n                                    </>\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                        {!loggedIn ?\n                            <>\n                                <div>\n                                    {/* <p className=\"pt-5 logStatusInfo text-center text-white\">Logged Out</p> */}\n                                </div> </> :\n                            <>\n                                <div>\n                                    <p className=\"logStatusInfo text-center text-white pb-2\">\n                                        Hello,\n                                        <br></br>\n                                        {props.currentUser.first_name} {props.currentUser.last_name}\n                                    </p>\n                                </div>\n                            </>\n                        }\n                </nav>\n            </Default>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default Navbar;\n\n/* -------------------------------------------------------------------------- */\n/*                                Original Nav                               */\n/* -------------------------------------------------------------------------- */\n\n    // Left my original in to ref how to setup with location later. will remove when done\n\n/*\n\n    function Navbar() {\n\n        const location=useLocation();\n\n        return (\n            <nav className=\"navbar myNavBg navbar-expand-lg navbar-dark p-3 mb-3 border-3 border-bottom border-secondary\">\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"/\">App Name</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\" href=\"/\">\n                                <Link to=\"/\" className={location.pathname===\"/\" || location.pathname===\"\" ? \"nav-link active\" : \"nav-link\"}>\n                                    Home\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\" href=\"/portfolio\">\n                                <Link to=\"/portfolio\" className={location.pathname===\"/portfolio\" ? \"nav-link active\" : \"nav-link\"}>\n                                    Portfolio\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\" href=\"/contact\">\n                                <Link to=\"/contact\" className={location.pathname===\"/contact\" ? \"nav-link active\" : \"nav-link\"}>\n                                    Contact\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n\n*/","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Row from \"../Row\";\nimport Col from \"../Column\"\nimport Nav from \"../Navbar\";\nimport \"../../index.css\";\n\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n\nfunction Wrapper(props) {\n\n    return (\n        <main className=\"my-0 divvy-bg\" data-component=\"Wrapper\">\n            <Row>\n                <Col className=\"col-lg-1 \">\n                    <Nav\n                        loggedInStatus={props.loggedInStatus}\n                        currentUser={props.currentUser}\n                        handleLogout={props.handleLogout}>\n                    </Nav>\n                </Col>\n                <Col>\n                    {props.children}\n                </Col>\n            </Row>\n        </main>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n/*\n    Exported for use in app.js\n*/\nexport default Wrapper;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\n  import React from \"react\";\n\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Here I specify a container and give it some basic bootstrap classes, \n    Then I pass props within that div (which is defined on my directory page\n    as the row component)\n*/\n\n  function Container(props) {\n    return <div className=\"container m-y0 p-0\" data-component=\"Container\" {...props} />;\n  }\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\n  export default Container;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction LoginCard(props) {\n\n    return (\n        <>\n            <div class=\"col-md-8 mx-auto mt-5\">\n                <div class=\"card px-0 shadow\">\n                    <h5 class=\"card-header bg-dark text-white text-center\">Current User Login</h5>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n                                <div class=\"col-sm-10\">\n                                    <input id=\"inputEmail\" type=\"email\" class=\"form-control\" autoComplete=\"email\" id=\"email-login\"/>\n                                </div>\n                            </div>\n                            <div class=\"row mb-3\">\n                                <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Password</label>\n                                <div class=\"col-sm-10\">\n                                    <input id=\"inputPassword\" type=\"password\" class=\"form-control\" autoComplete=\"current-password\" id=\"password-login\"/>\n                                </div>\n                            </div>\n                            <div class=\"text-center\">\n                                <button id=\"log-in-button\" type=\"submit\" onClick={props.handleFormSubmit} class=\"btn btn-warning\">Login</button>\n                            </div>\n                        </form>\n                        <div className=\"text-center mt-2\">\n                            <p style={{color:'rgb(255, 193, 7)'}} id=\"message\"></p> \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default LoginCard;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\nimport axios from \"axios\";\n/* -------------------------------------------------------------------------- */\n/*                        Define Client Side API Calls                        */\n/* -------------------------------------------------------------------------- */\nexport default {\n    /* --------------------------------- tickets & Comments ------------------ */\n\n    // Get all tickets\n    getAllTickets: function () {\n        return axios.get(\"/api/ticket\");\n    },\n\n    // New Tickets\n    newTicket: function (newTicket) {\n        return axios.post(\"/api/ticket\", newTicket);\n    },\n\n    // Update Tickets\n    updateTicket: function (id, updatedTicket) {\n        return axios.put(\"/api/ticket/\" + id, updatedTicket);\n    },\n\n    // Delete Tickets\n    deleteTicket: function (id) {\n        return axios.delete(\"api/ticket/\" + id);\n    },\n\n    // New Comment\n    newComment: function (newComment) {\n        return axios.post(\"/api/comment/\", newComment)\n    },\n\n    /* ---------------------------------- users --------------------------------- */\n    // Get all USERS\n    getAllUsers: function () {\n        return axios.get(\"/api/user\");\n    },\n    newUser: function (newUser) {\n        return axios.post(\"/api/user\", newUser);\n    },\n\n\n    // Get single USER\n    getCurrentUser: function () {\n        return axios.get(\"/api/user/current\");\n    },\n\n    // Get single USER by ID\n    getSingleUser: function () {\n        return axios.get(\"/api/user/2\");\n    },\n\n    // Update User\n    updateUser: function (id, updatedTicket) {\n        return axios.put(\"/api/user/\" + id, updatedTicket);\n    },\n\n    // Create employee user\n    creatNewEmployee: function (newEmployee) {\n        console.log(newEmployee);\n        return axios.post(\"/api/user/newemp\", newEmployee)\n    },\n\n\n    /* ---------------------------------- clients ------------------------------ */\n    // Get all clients\n    getAllClients: function () {\n        return axios.get(\"/api/client\");\n    },\n    // Create new client\n    createNewClient: function (newClient) {\n        return axios.post(\"/api/client\", newClient);\n    },\n\n    /* ---------------------------------- team------------------------------ */\n    createNewTeam: function (newTeam) {\n        return axios.post(\"/api/team\", newTeam);\n    },\n    getAllOrgTeams: function () {\n        return axios.get(\"/api/team\");\n    },\n\n\n    /* -------------------------------- authcheck ------------------------------- */\n    checkAuth: function () {\n        return axios.get(\"/api/auth/authcheck\");\n    },\n    /* ---------------------------------- login --------------------------------- */\n    login: function ({ email, password }) {\n        return axios.post(\"/api/auth/login\", { email, password });\n    },\n    /* ---------------------------------- logout --------------------------------- */\n    logout: function () {\n        return axios.post(\"/api/auth/logout\");\n    },\n\n    /* ----------------------------------- orgs ---------------------------------- */\n    newOrg: function (newOrg) {\n        return axios.post(\"/api/org\", newOrg);\n    },\n    getOrg: function () {\n        return axios.get(\"/api/org/current\")\n    },\n\n    /* ----------------------------------- Reward System ---------------------------------- */\n    getAllTeamRewards: function () {\n        return axios.get(\"/api/reward\")\n    },    \n    getTotalUserPoints: function () {\n        return axios.get(\"/api/reward/points\")\n    },\n\n    /* ---------------------------------- email ---------------------------------- */\n    sendEmail: function (emailOptions) {\n        return axios.post(\"/api/email\", emailOptions)\n    },\n};\n","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React, { Component } from \"react\";\nimport Container from \"../../components/Container\";\nimport Row from \"../../components/Row\";\nimport Col from \"../../components/Column\";\nimport LoginCard from \"../../components/LoginCard\";\nimport { useMediaQuery } from 'react-responsive';\nimport API from \"../../utils/API\";\n\n\n/* -------------------------------------------------------------------------- */\n/*                           Set Mobile BreakPoints                           */\n/* -------------------------------------------------------------------------- */\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    This page component will render all our stuff below it within the bs container\n    class for spacing. This is our whitespace for making the UI alongside\n    the navbar. \n*/\n\nclass Login extends Component {\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n\n        // Collect values from the login form\n        const email = document.querySelector('#email-login').value.trim();\n        const password = document.querySelector('#password-login').value.trim();\n\n        if (email && password) {\n            // Send a POST request to the API endpoint\n            API.login({ email, password })\n                .then(res => {\n                    window.location = '/dashboard';\n                }\n                )\n                .catch(err => {\n                    console.log(err);\n                    document.getElementById(\"message\").innerHTML = err.response.data.message;\n                }\n                )\n        }\n    };\n\n    render() {\n\n        return (\n            <div>\n                <Container>\n                    <Row className=\"mb-4 d-flex flex-row justify-content-center\">\n                        <Col>\n                            <LoginCard\n                                handleFormSubmit={this.handleFormSubmit}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Login;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\n    import React from \"react\";\n    import \"../../index.css\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction SectionHeader(props) {\n    return (\n        <div className=\"text-center text-warning fw-normal fs-3 divvy-bg-tile p-3 mb-2\" data-component=\"SectionHeader\">\n            {props.children}\n        </div>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\n    export default SectionHeader;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport { Form, Button, Col } from 'react-bootstrap';\nimport API from \"../../utils/API\";\nimport \"../../index.css\";\nimport SectionHeader from \"../SectionHeader\";\nimport Row from \"../Row\"\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction SignupCard() {\n\n    // Define references and general variables for values on update\n    let firstName = React.createRef();\n    let lastName = React.createRef();\n    let orgName = React.createRef();\n    let phoneNumber = React.createRef();\n    let email = React.createRef();\n    let password = React.createRef();\n    let orgID;\n\n    function signup(event) {\n        event.preventDefault();\n        createOrg();\n    }\n\n    function createOrg() {\n\n        const newOrg =\n        {\n            name: orgName.current.value\n        }\n\n        // Validate inputs and make API Call\n        if (newOrg.name != null) {\n            // Make the API call to post a new org\n            API.newOrg(newOrg)\n                .then(res => {\n                    console.log('axio post response', res.data.id);\n                    orgID = res.data.id;\n                    createUser(orgID);\n                })\n                .catch(err => console.log(err));\n        }\n        else {\n            // If no org name entered, alert them and do not make API call\n            alert(\"Please make sure you have entered your organization name!\")\n        };\n    }\n\n    function createUser(orgID) {\n\n        const newUser =\n        {\n            org_id: orgID,\n            first_name: firstName.current.value,\n            last_name: lastName.current.value,\n            phone_number: phoneNumber.current.value,\n            email: email.current.value,\n            password: password.current.value,\n            is_manager: true,\n            role: \"Admin\",\n            profile_icon: \"\"\n        }\n\n        // Validate inputs and make API Call\n        if (newUser.first_name != null ||\n            newUser.last_name != null ||\n            newUser.phone_number != null ||\n            newUser.email != null ||\n            newUser.password != null\n        ) {\n            // Make the API call to post a new org\n            API.newUser(newUser)\n                .then(res => console.log('axio post response', res.data))\n                .then(res => {\n                    API.login({ email: email.current.value, password: password.current.value })\n                        .then(res => console.log('axio login post response', res.data))\n                        .then(res => {\n                            const emailOptions = \n                            {\n                                to: email.current.value,\n                                subject: \"Welcome to DIVVY\",\n                                message: \"You have just signed up - Welcome!\"\n                            }\n                            sendWelcomeEmail(emailOptions);\n                        })\n                        // .then(res => window.location = '/org')\n                        .catch(err => console.log(err));\n                })\n                .catch(err => console.log(err));\n        }\n        else {\n            // If no org name entered, alert them and do not make API call\n            alert(\"Please make sure you have entered all the required fields!\")\n        };\n    }\n\n    function sendWelcomeEmail(emailOptions) {\n        API.sendEmail(emailOptions)\n                .then(res => console.log('axio email post response', res.data))\n                .then(res => window.location = '/org')\n                .catch(err => console.log(err));\n    }\n\n    return (\n        <Row>\n            <Form className=\"text-center\">\n                <Form.Group controlId=\"formOrgName\">\n                    <Form.Row>\n                        <Col xs={6}>\n                            <SectionHeader>Signup</SectionHeader>\n                            <Form.Control ref={orgName} placeholder=\"Organization name\" />\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Row>\n                        <Col xs={3}>\n                            <Form.Control ref={firstName} placeholder=\"First name\" />\n                        </Col>\n                        <Col xs={3}>\n                            <Form.Control ref={lastName} placeholder=\"Last name\" />\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPhone\">\n                    <Form.Row>\n                        <Col xs={6}>\n                            <Form.Control ref={phoneNumber} placeholder=\"Phone Number\" />\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Row>\n                        <Col xs={6}>\n                            <Form.Control ref={email} type=\"email\" placeholder=\"Enter email\" autoComplete=\"username\" />\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Row>\n                        <Col xs={6}>\n                            <Form.Control ref={password} type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" />\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicSubmit\">\n                    <Form.Row>\n                        <Col xs={6}>\n                            <center>\n                                <Button variant=\"primary\" type=\"submit\" className=\"text-center\" block onClick={signup}>\n                                    Submit\n                                    </Button>\n                            </center>\n                        </Col>\n                    </Form.Row>\n                </Form.Group>\n            </Form>\n        </Row>\n        \n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default SignupCard;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Container from \"../../components/Container\";\nimport Row from \"../../components/Row\";\nimport Col from \"../../components/Column\";\nimport SignupCard from \"../../components/SignupCard\";\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    This page component will render all our stuff below it within the bs container\n    class for spacing. This is our whitespace for making the UI alongside\n    the navbar. \n*/\nfunction Signup() {\n\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col className=\"mx-auto\">\n                            <SignupCard />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Signup;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n   /* <div className=\"card col-3 m-1 text-center float-left px-0\" data-component=\"employeecard\">\n            <div className=\"card-header\">\n                <p className=\"card-text\"> Welcome to Divvy!</p>\n            </div>\n            <div className=\"card-body p-1\">\n                <button className=\"btn btn-lg btn-outline-success\" variant=\"primary\" onClick={loginClickHandle}>\n                   Login\n                </button>\n                <p className=\"card-text align-middle\">\n                    <a className=\"forgotPasswordLink\" href=\"/#\">Forgot password  </a>\n                    |\n                    <a className=\"signupLink\" href=\"/signup\">  Click here to Sign-Up</a>\n                </p>\n            </div>\n        </div> */\n\nfunction HomePageCard(props) {\n\n    let history = useHistory();\n\n    function loginClickHandle() {\n        history.push(\"/login\");\n    }\n\n    return (\n        <>\n            <div className=\"card col-lg-6 mx-auto px-0 shadow-lg mt-5\">\n                <div className=\"card-header bg-dark text-white px-3 text-center fw-bold fs-3\">\n                    Welcome to Divvy!\n                </div>\n                <div className=\"text-center\">\n                    <div className=\"my-3\">\n                        <button className=\"btn btn btn-outline-warning\" variant=\"primary\" onClick={loginClickHandle}>\n                            Login\n                        </button>\n                    </div>\n                    <div className=\"my-3\">\n                        <a className=\"forgotPasswordLink divvy-link fs-5\" href=\"/#\">Forgot password</a>\n                    </div>\n                    <div className=\"my-3\">\n                        <a className=\"signupLink divvy-link fs-5\" href=\"/signup\">Sign-Up</a>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default HomePageCard;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Container from \"../../components/Container\";\nimport Row from \"../../components/Row\";\nimport Col from \"../../components/Column\";\nimport HomePageCard from \"../../components/HomePageCard\";\nimport { useMediaQuery } from 'react-responsive';\n\n/* -------------------------------------------------------------------------- */\n/*                           Set Mobile BreakPoints                           */\n/* -------------------------------------------------------------------------- */\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    This page component will render all our stuff below it within the bs container\n    class for spacing. This is our whitespace for making the UI alongside\n    the navbar. \n*/\n\n\nfunction Home() {\n\n    /* ---------------------------- Component Render ---------------------------- */\n    return (\n        <Container>\n            <Row>\n                <Col className=\"col-lg-12 align-items-center\">\n                    <HomePageCard />\n                </Col>\n            </Row >\n        </Container >\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Home;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useMediaQuery } from 'react-responsive';\nimport Col from \"../../components/Column\";\nimport Row from \"../../components/Row\";\nimport Container from \"../../components/Container\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n/* ----Define Queries For Rendering Mobile Nav or Non-Mobile(default) Nav---- */\n\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* ------------- Define Main Nav Component (one mobile one not) ------------- */\n\nfunction ProfileForm(props) {\n    return (\n        <>\n            <Container className=\"m-3 p-3\">\n                <form>\n                    <Row>\n                        <Col className=\"mx-auto\">\n                            {/* First Name */}\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"InputFirstName\" className=\"form-label fw-bold\">First Name</label>\n                                <input ref={props.latestFirstName} defaultValue={props.singleuser.first_name} type=\"text\" className=\"form-control\" id=\"InputFirstName\" aria-describedby=\"firstName\" />\n                            </div>\n                            {/* Last Name */}\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"InputLastName\" className=\"form-label fw-bold\">Last Name</label>\n                                <input ref={props.latestLastName} defaultValue={props.singleuser.last_name} type=\"text\" className=\"form-control\" id=\"InputLastName\" aria-describedby=\"lastName\" />\n                            </div>\n                        \n                            {/* Email */}\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"InputEmail\" className=\"form-label fw-bold\">Email</label>\n                                <input ref={props.latestEmail} defaultValue={props.singleuser.email} type=\"text\" className=\"form-control\" id=\"InputEmail\" aria-describedby=\"email\" />\n                            </div>\n                            {/* Phone Number */}\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"InputPhone\" className=\"form-label fw-bold\">Phone</label>\n                                <input ref={props.latestPhone} defaultValue={props.singleuser.phone_number} type=\"text\" className=\"form-control\" id=\"InputPhone\" aria-describedby=\"email\" />\n                            </div>\n                            {/* Role */}\n                            <fieldset disabled>\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"disabledSelect\" className=\"form-label fw-bold\">Role</label>\n                                    <input defaultValue={props.singleuser.role} type=\"text\" className=\"form-control\" id=\"disabledSelect\" aria-describedby=\"firstName\" />\n                                    <div class=\"form-text text-center\">Roles are only configurable by team managers</div>\n                                </div>\n                            </fieldset>\n                        </Col>  \n                    </Row>\n                    {props.error.visible ? <div className=\"mb-2 text-center text-danger\">{props.error.type}</div> : <div className=\"mb-2 text-center\"></div>}\n                    <Row className=\"mt-2\">\n                        <Col></Col>\n                        {/* Submit Changes */}\n                        <Col className=\"text-center\">\n                            <button onClick={props.handleFormSubmit} type=\"submit\" className=\"btn btn-warning\">Update</button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </form>\n            </Container>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default ProfileForm;\n","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction ProgressBar(props) {\n  // const { bgcolor, completed,  } = props;\n  console.log(`====== PROPS ==========`);\n  console.log(props);\n  console.log(props.points.points);\n\n\n  const containerStyles = {\n    height: 30,\n    width: '100%',\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 50,\n    // margin: 50\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${calculatePercentLeft()}%`,\n    backgroundColor: '#6a1b9a',\n    borderRadius: 'inherit',\n    textAlign: 'right'\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n\n  // Calculate the percent left until the next reward\n  function calculatePercentLeft() {\n    for (let i = 0; i < props.rewards.length; i++) {\n      // If the current index req points is great than, then use that as the next goal/threshold\n      if (props.rewards[i].req_points > props.points.points)\n        return Math.floor((props.points.points / props.rewards[i].req_points) * 100);\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <div className=\"\" style={containerStyles}>\n          <div style={fillerStyles}>\n            <span style={labelStyles}>{`${calculatePercentLeft()}%`}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default ProgressBar;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Container from \"../Container\";\nimport Col from \"../Column\";\nimport Row from \"../Row\";\nimport { FaPizzaSlice } from 'react-icons/fa';\nimport { AiOutlineGift, AiFillGift, AiOutlineCoffee, FiCoffee, AiOutlineRight } from 'react-icons/ai';\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction RewardsContainer(props) {\n  console.log(props);\n  return (\n    <Container >\n      <Row className=\"row justify-content-center\">\n\n        {props.rewards.map((reward, idx) => {\n          console.log(`${idx + 1} | ${props.rewards.length}`);\n          // console.log(props.rewards.length);\n          return (\n            <>\n              {/* Column containing Gift Icon */}\n              <Col className=\"col-1 text-center p-0 m-0\">\n                {\n                  props.points.points < reward.req_points\n                    ?\n                    <AiOutlineGift className=\"m-2\" style={{ color: \"#FEDE7D\", fontSize: \"35px\" }} />\n                    :\n                    <AiFillGift className=\"m-2\" style={{ color: \"#FEDE7D\", fontSize: \"35px\" }} />\n                }\n              </Col>\n\n              {/* Ternary used to ensure an extra carrot (>) is not created at the end */}\n              {(idx + 1) < props.rewards.length ?\n                <Col className=\"col-1 text-center p-0 m-0\">\n                  <AiOutlineRight className=\"m-3\" style={{ color: \"#FEDE7D\", fontSize: \"20px\" }} />\n                </Col>\n                : <></>}\n            </>\n          )\n        })}\n      </Row>\n    </Container >\n  )\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default RewardsContainer;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\"\nimport Col from \"../../components/Column\";\nimport Row from \"../../components/Row\";\nimport Container from \"../../components/Container\";\nimport ProfileForm from \"../../components/ProfileForm\";\nimport ProgressBar from \"../../components/Progress-Bar\";\nimport RewardsContainer from \"../../components/RewardsContainer\";\nimport \"../../index.css\";\n\n// Styling Imports\nimport './profile.css';\nimport { FaLink, FaUpload } from 'react-icons/fa';\nimport { GiCancel } from 'react-icons/gi';\nimport SectionHeader from \"../../components/SectionHeader\";\n\n/* -------------------------------------------------------------------------- */\n/*                           Set Mobile BreakPoints                           */\n/* -------------------------------------------------------------------------- */\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\nfunction Profile() {\n\n    /* ---------------------------------- State --------------------------------- */\n\n    // Holds the user details/info\n    const [user, setUser] = useState({});\n\n    // Holds the current info/error details\n    const [error, setError] = useState({});\n\n    // Holds the upload div visibility\n    const [picture, setPicture] = useState({});\n\n    // Holds the rewards of the team that the manager created\n    const [rewards, setRewards] = useState([{}]);\n\n    // Holds the rewards of the team that the manager created\n    const [points, setPoints] = useState({\n        ticketData: [{}]\n    });\n\n    // Call when components have loaded\n    useEffect(() => {\n        // Fechtes the user info/details\n        getUser();\n\n        // Sets initial state of error to hidden so you dont see the div\n        updateError(false, null);\n\n        // Sets initial state of pic upload div to hidden so you dont see the div\n        updatePicture(false);\n\n        // Fetches the team rewards info/details\n        getRewards();\n\n        // Fetches the team rewards info/details\n        getPoints();\n\n    }, [])\n\n\n    // Fetches the users total points and sets the state\n    function getPoints() {\n\n        // Call to server to get user's total points, set the state\n        API.getTotalUserPoints()\n            .then(res => setPoints(res.data))\n            .catch((err) => console.log(err));\n\n    }\n\n    // Fetches rewards and sets the rewardState\n    function getRewards() {\n\n        // Call to server to get rewards, set the state\n        API.getAllTeamRewards()\n            .then(res => {\n                setRewards(res.data)\n            })\n            .catch((err) => console.log(err))\n    }\n\n\n\n    // Set the user state\n    function getUser() {\n        API.getCurrentUser()\n            .then(res => setUser(res.data))\n            .catch(err => console.log(err));\n    };\n\n    // Set the error state\n    function updateError(visible, type) {\n        if (type === \"unique violation\") {\n            type = \"Email already in use! Please enter a different email.\"\n        }\n\n        setError({\n            visible: visible,\n            type: type\n        })\n    }\n\n    // Show the url element when picture is clicked\n    function updatePicture(visible) {\n        setPicture({\n            visible: visible\n        })\n    }\n\n    // Define references and general variables for values on update\n    let latestFirstName = React.createRef();\n    let latestLastName = React.createRef();\n    let latestEmail = React.createRef();\n    let latestPhone = React.createRef();\n\n    // Update the user with the form values\n    function handleFormSubmit(e) {\n        // Allow page refresh if no error on save\n        if (!error.visible) {\n            e.preventDefault();\n        }\n\n        const updatedProfile = {\n            first_name: latestFirstName.current.value,\n            last_name: latestLastName.current.value,\n            email: latestEmail.current.value,\n            phone_number: latestPhone.current.value,\n            last_name: latestLastName.current.value,\n        }\n        callUpdateUser(updatedProfile);\n    }\n\n\n    // Make the API call to update the user details\n    function callUpdateUser(obj) {\n        API.updateUser(user.id, obj)\n            .then(res => console.log('axios put response', res))\n            .then(() => {\n                getUser();\n                updateError(false, null);\n            })\n            .catch(err => {\n                let errorType = JSON.parse(err.response.request.response).errors[0].type;\n\n                // Set the error state for displaying\n                updateError(true, errorType);\n            });\n    }\n\n    // Show the update profile picture element when you click the profile picture.\n    function handleImageClick(e) {\n        e.preventDefault();\n        console.log(\"clicked\");\n\n        setPicture({\n            visible: true\n        });\n    }\n\n\n    let latestURL = React.createRef();\n    // Update the Profile Picture when you press upload button\n    function handleUpdateURLClick(e) {\n        e.preventDefault();\n\n        console.log(latestURL.current.value);\n\n        let obj = {\n            profile_icon: latestURL.current.value\n        }\n\n        callUpdateUser(obj);\n        updatePicture(false);\n    }\n\n    // Hide the div when you press the cancle button\n    function handleCancleClick(e) {\n        e.preventDefault();\n        updatePicture(false);\n    }\n\n    /* ---------------------------- Component Render ---------------------------- */\n    return (\n        <>\n            <Container className=\"mt-4 mb-4 mx-4\">\n                <Row>\n                    <Col className=\"col-lg-6 divvy-bg-tile shadow mx-auto p-0\">\n                        <SectionHeader>My Info</SectionHeader>\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col className=\"col-lg-5\" >\n                                        <div onClick={handleImageClick} className=\"profile-img my-3 text-center\">\n                                            <img src={user.profile_icon ? user.profile_icon : \"https://www.pngitem.com/pimgs/m/30-307416_profile-icon-png-image-free-download-searchpng-employee.png\"} width=\"200px\" alt=\"profile picture\" className=\" border border-warning shadow-lg rounded-pill\"></img>\n                                            <FaLink className=\"icon-button\" />\n                                        </div>\n                                    </Col>\n                                    <Col className=\"col-lg-6 my-auto\">\n                                        <Row className=\"my-3\">\n                                            <Col className=\"my-auto\">\n\n                                                <div style={{ fontSize: \"smaller\" }}>Holding for Brandon Metrics Container</div>\n\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"my-3\">\n                                            <Col className=\"my-auto\">\n\n                                                <span>Reward Progress</span>\n                                                <ProgressBar\n                                                    points={points}\n                                                    rewards={rewards}\n                                                />\n\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"my-3\">\n                                            <Col className=\"my-auto\">\n                                                {/* <div className=\"divvy-bg-title\">Holding for Brandon icons container</div> */}\n                                                <RewardsContainer\n                                                    rewards={rewards}\n                                                    points={points}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <form className={picture.visible ? \"text-center\" : \"text-center d-block d-none\"}>\n                                            <div>\n                                                <div className=\"my-1\">\n                                                    <label htmlFor=\"InputURL\" className=\"form-label mt-5 d-block\">Enter Profile Image URL</label>\n                                                    <input ref={latestURL} id=\"InputURL\" defaultValue={user.profile_icon} className=\"col-lg-5\"></input>\n                                                </div>\n                                                <div className=\"my-2\">\n                                                    <div>\n                                                        <button onClick={handleUpdateURLClick} className=\"btn btn-sm btn-outline-success mx-1\">Update</button>\n                                                        <div onClick={handleCancleClick} className=\"btn btn-sm btn-outline-secondary mx-1\">Cancel</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <ProfileForm\n                                    singleuser={user}\n                                    handleFormSubmit={handleFormSubmit}\n                                    latestFirstName={latestFirstName}\n                                    latestLastName={latestLastName}\n                                    latestEmail={latestEmail}\n                                    latestPhone={latestPhone}\n                                    error={error}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n\n            </Container>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Profile;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\n    import React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n    // User name and comment set by comments container during map\n    function CommentsDiv(props) {\n        return (\n            <>\n                <div className={props.divClassName}>\n                    <div className=\"row\">\n                        <div className={props.nameClassName}>{props.user}</div> \n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">{props.comment}</div> \n                    </div>\n                    <div className=\"row text-right\">\n                        <div className=\" col fst-italic mt-2 mr-1 align-self-end\">{props.date}</div> \n                    </div>           \n                </div>\n            </>\n        )\n    }\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\n    export default CommentsDiv;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\n    import React from \"react\";\n    import CommentDiv from \"../CommentDiv\"\n    import \"./index.css\";\n    const dayjs = require('dayjs');\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n    \n    function CommentsContantainer(props) {\n\n        /* -------------------------- Organize Information -------------------------- */\n\n            // Check the props (this includes all comments associated with the ticket)\n            //console.log ('props in Comments Container are', props)\n\n            // Organize comments into array of objects\n            const comments = props.comments;\n            \n            // Get the user whom is logged id so we can check if they are the comment owner\n            const currentUserId=props.currentUser.id;\n              \n        /* -------------------------- Define Data Formatter ------------------------- */\n           \n            function convertDate(date) {\n                return dayjs(date).format('MMMM-DD-YYYY')\n            };\n\n        /* ---------------------------- Return Component ---------------------------- */\n            return (\n                <>\n                    <div className=\"card comments-section overflow-auto\">\n                        <div className=\"card-body\">\n                           {props.children}\n                            {comments.map(comment => {\n                                return (\n                                    <CommentDiv\n                                        user={`${comment.user.first_name} ${comment.user.last_name}`}\n                                        comment={comment.comment}\n                                        date={convertDate(comment.date_created)}\n                                        key={comment.id}\n                                        divClassName={comment.user_id===currentUserId \n                                            ?\n                                            \"bg-light p-2 my-1 container\"\n                                            :\n                                            \"bg-light p-2 my-1 ml-2 container\"\n                                        }\n                                        nameClassName={comment.user_id===currentUserId \n                                            ?\n                                            \"fw-bold text-warning col\"\n                                            :\n                                            \"fw-bold text-secondary col\"\n                                        }\n                                    /> \n                                )\n                            })}                                \n                        </div>\n                    </div>\n                    \n                </>\n            )\n    }\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\n    export default CommentsContantainer;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n   \n    import React, { useEffect, useState } from \"react\"; \n    import {Modal,Button} from \"react-bootstrap\";\n    import API from \"../../utils/API\";\n    import \"./index.css\";\n    import CommentsContantainer from \"../CommentsContainer\";\n    import dayjs from \"dayjs\";\n    \n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n    function ManageTicketModal (props) {\n\n        // console.log('props in manage ticket modal is', props);\n\n    /* ------------------------------ Props Filters ----------------------------- */\n\n        // Take all users and filter it to employees for rendering list\n        const allEmployees = props.allUsers.filter(user=> user.role!=\"Client\");\n\n        // Define Current user into a variable for use in conditional class setting\n        const currentUser = props.currentUser;\n            //console.log('CURRENT USER ON MANAGE MODAL', currentUser);\n\n    /* ---------------------------------- State --------------------------------- */\n\n        // Set state\n\n            // Modal and Section Visability\n            const [visability, setVisablity] = useState(false)\n            const [isTicketShowing, setisTicketShowing] = useState(true)\n            const [isClientShowing, setisClientShowing] = useState(false)\n            const [isCommentShowing, setisCommentShowing] = useState(false)\n            const [isNewCommentShowing, setisNewCommentShowing] = useState(false)\n\n            // Recent Comments and Count\n            const [recentComments, setRecentComments] = useState([])\n            const [recentCommentsCount, setRecentCommentsCount] = useState(0);\n\n    /* ------------------------ Modal Visability Handlers ----------------------- */\n\n        // Show Modal\n        function openModal () {\n            setVisablity(true)\n        };\n\n        // Hide Modal\n        function closeModal () {\n            setVisablity(false)\n        };\n\n    /* --------------------- Details Visability Handlers  ------------------------ */\n        \n        // Show Ticket Details\n        function handleShowTicketDetails () {\n            // Set this showing state to true and others false\n            setisTicketShowing(true);\n            setisClientShowing(false);\n            setisCommentShowing(false);\n        }\n\n        // Show Client Details\n        function handleShowClientDetails () {\n            // Set this state true and others false\n            setisTicketShowing(false);\n            setisClientShowing(true);\n            setisCommentShowing(false);\n        }\n\n        // Show Client Details\n        function handleShowCommentDetails () {\n            // Set this state true and others false\n            setisTicketShowing(false);\n            setisClientShowing(false);\n            setisCommentShowing(true);\n        }\n\n        // Show comments count\n\n    /* -------------------------- Handle Ticket Update -------------------------- */\n\n        // Define references and general variables for values on update\n        let latestPriority = React.createRef();\n        let latestStatus = React.createRef();\n        let latestAssignee = React.createRef();\n        let latestDescription = React.createRef();\n       \n        // Declare update handler function\n        function updateTicket () {\n\n            // Create an updated ticket object that pulls latest info from possible edits\n            const updatedTicket = \n                {\n                    priority: latestPriority.current.value,\n                    status: latestStatus.current.value,\n                    assigned_to: latestAssignee.current[latestAssignee.current.selectedIndex].getAttribute(\"data-user-id\"), \n                    description: latestDescription.current.value\n                }\n            \n            // Make the API call to update the ticket\n            API.updateTicket(props.ticketID, updatedTicket)\n                .then(res=> console.log('axio put response', res))\n                .then(closeModal)\n                .then(window.location.reload())\n                .catch(err=>console.log(err));\n        };\n\n        /* -------------------------- Handle Ticket Delete -------------------------- */\n\n        // Declare update handler function\n        function deleteTicket () {\n            \n            // Confirm intent to delete\n            const confirmDelete = prompt('Deleting this ticket will permentenly remove all of its data. If you with to delete, please type \"DELETE\" below to confirm');\n            confirmDelete;\n\n            // If confirmed, delete\n            if (confirmDelete === \"DELETE\") {\n                API.deleteTicket(props.ticketID)\n                    .then(closeModal)\n                    .then(window.location.reload())\n                    .catch(err=>console.log(err));\n            };\n        };\n\n        /* --------------------------- Handle New Comment --------------------------- */\n        \n        // Define references & global variables\n        let newCommentTextArea = React.createRef();\n        let recentComment=[]\n        const currentUserName = `${props.currentUser.first_name} ${props.currentUser.last_name}`;\n\n        \n        // On click of + comment button, show the text-area and allow for entry\n            function readyNewComment () {\n                // Set state to render new comment div\n                setisNewCommentShowing(true);\n                console.log(isNewCommentShowing);\n            };\n\n            // Cancel new comment if needed\n            function cancelNewComment (e) {\n                // Avoid refresh\n                e.preventDefault();\n                // Set state to hide new comment div again\n                setisNewCommentShowing(false);\n                // Clear the value of anything that had been typed in\n                newCommentTextArea.current.value=\"\";\n            };\n\n            function postNewComment (e) {\n                console.log('postNewComment called');\n                // Prevent Default\n                e.preventDefault();\n\n                // Create an object with the info needed for posting a new comment\n                const newComment=\n                    {\n                      ticket_id: props.ticketID,\n                      user_id: props.currentUser.id,\n                      comment: newCommentTextArea.current.value,\n                      date_modified:null\n                      // NOTE that date_created is managed by sql automatically based on model updates\n                    }\n                console.log('new comment object', newComment);\n\n                // update an array value that we will feed to state\n                recentComment = (\n                    <div className=\"bg-light p-1 my-1 container\" data-tester=\"recentComment\">\n                        <div className=\"row\">\n                            <div className=\"fw-bold text-warning col\">{currentUserName}</div> \n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">{newCommentTextArea.current.value}</div> \n                        </div>\n                        <div className=\"row text-right\">\n                            <div className=\" col fst-italic mt-2 mr-1 align-self-end\">{dayjs().format('MMMM-DD-YYYY')}</div> \n                        </div>           \n                    </div>\n                );\n\n                // Update state (concat so recent comments show top of list)\n                setRecentComments([recentComment].concat(recentComments));\n\n                // Update recent comments count\n                setRecentCommentsCount(recentCommentsCount + 1); \n\n                // Post the new comment to the server (TODO)\n                API.newComment(newComment)\n                    .then(res=> console.log('axio put response', res))\n                    .catch(err=>console.log(err));\n\n                // Hide the new comments div and clear it (re run cancelNewComment)\n                cancelNewComment(e);\n            }\n\n        /* -------------------- Modal Button and Modal Component -------------------- */\n\n        return (\n            <>\n                <button  className=\"btn btn-sm btn-outline-warning\" variant=\"primary\" onClick={openModal}>\n                    Manage\n                </button>\n                <Modal show={visability} onHide={closeModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{props.ticketID} - {props.ticketTitle}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                       <div className=\"row mb-3 justify-content-center\">\n                           <div className=\"col text-center\">\n                               <button \n                                    className={isTicketShowing ? \"btn alert-warning btn-sm text-center\" : \"btn btn-light btn-sm text-center\"} \n                                    onClick={handleShowTicketDetails}>\n                                        Ticket Details\n                                </button>\n                           </div>\n                           <div className=\"col text-center\">\n                               <button \n                                    className={isClientShowing ? \"btn alert-warning btn-sm text-center\" : \"btn btn-light btn-sm text-center\"} \n                                    onClick={handleShowClientDetails}>\n                                        Client Details\n                                </button>\n                           </div>\n                           <div className=\"col text-center\">\n                               <button \n                                    className={isCommentShowing ? \"btn alert-warning btn-sm text-center\" : \"btn btn-light btn-sm text-center\"} \n                                    onClick={handleShowCommentDetails}>\n                                        Comments {(props.ticketComments != undefined) ? `(${props.ticketComments.length + recentCommentsCount})` : \"\"}\n                                </button>\n                           </div>\n                       </div>\n                        <form>\n                            <div className={isTicketShowing ? \"\" : \"d-none\"}>\n                                <h5 className= \"text-center\">Manage</h5>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text col-3\">Priority</span>\n                                    <select ref={latestPriority} className=\"form-select\" defaultValue={props.ticketPriority} aria-label=\"Default select example\">\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                    </select> \n                                </div>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text col-3\">Status</span>\n                                    <select \n                                        ref={latestStatus} \n                                        className=\"form-select\" \n                                        defaultValue={props.ticketStatus} \n                                        disabled={currentUser.role !=\"Client\" ? false : true}\n                                        aria-label=\"Default select example\"\n                                        >\n                                        <option value=\"Open\">Open</option>\n                                        <option value=\"Assigned\">Assigned</option>\n                                        <option value=\"In Progress\">In Progress</option>\n                                        <option value=\"Completed\">Completed</option>\n                                    </select>\n                                </div>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text col-3\">Assignee</span>\n                                    <select \n                                        ref={latestAssignee} \n                                        data-user-id={props.ticketAssignee.id} \n                                        className=\"form-select\" \n                                        defaultValue={props.ticketAssignee} \n                                        disabled={currentUser.role !=\"Client\" ? false : true}\n                                        aria-label=\"Default select example\"\n                                        >\n                                        <option value=\"\"></option>\n                                        {\n                                        allEmployees.map(employee => (\n                                            <option value={`${employee.first_name} ${employee.last_name}`} data-user-id={employee.id} key={employee.id}>\n                                                {`${employee.first_name} ${employee.last_name}`}\n                                            </option>\n                                        ))\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"input-group\">\n                                    <span className=\"input-group-text col-3\">Description</span>\n                                    <textarea ref={latestDescription} className=\"form-control\" defaultValue={props.ticketDescription} placeholder=\"Enter Description...\" aria-label=\"With textarea\"></textarea>\n                                </div>\n                            </div>\n                            <div className={isClientShowing ? \"\" : \"d-none\"}>\n                                <h5 className= \"text-center mt-3\">Client Details</h5>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text col-3\">Firm Name</span>\n                                    <input readOnly={true} value={props.ticketFirm}type=\"text\" className=\"form-control\" placeholder=\"Firm\" aria-label=\"Priority\" aria-describedby=\"priorityinput\"/> \n                                </div>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text col-3\">Firm Contact</span>\n                                    <input readOnly={true} value={props.ticketFirmContact}type=\"text\" className=\"form-control\" placeholder=\"Firm Contact\" aria-label=\"Priority\" aria-describedby=\"priorityinput\"/> \n                                </div>\n                                <div className=\"input-group mb-3\">\n                                    <span className=\"input-group-text col-3\">Firm Phone</span>\n                                    <input readOnly={true} value={props.ticketFirmPhone}type=\"text\" className=\"form-control\" placeholder=\"Firm Contact\" aria-label=\"Priority\" aria-describedby=\"priorityinput\"/> \n                                </div>\n                            </div>\n                           <div className={isCommentShowing ? \"\" : \"d-none\"}>\n                            <h5 className= \"text-center mt-3\">Comments</h5>\n                                    <CommentsContantainer\n                                        comments={props.ticketComments}\n                                        currentUser={props.currentUser}\n                                    >\n                                        <div className={isNewCommentShowing ? \"mb-2\" : \"d-none\"}>\n                                            <div className=\"form-group mb-1\">\n                                                <textarea ref={newCommentTextArea} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                                            </div>\n                                            <div className=\"text-right mb-2\">\n                                                <button className=\"btn btn-outline-warning btn-sm py-0 mx-1\" onClick={postNewComment}>Post</button>\n                                                <button className=\"btn btn-outline-secondary btn-sm py-0 mx-1\" onClick={cancelNewComment}>Cancel</button>\n                                            </div>\n                                        </div>\n\n                                        {recentComments} {/* each time this renders, it is only having the previous comment. So somehow its stacking it twice or something*/}\n                                        {console.log('recentComments state in the modal return is', recentComments)}\n\n                                    </CommentsContantainer>\n\n                           </div>\n                        </form>\n                    </Modal.Body>\n                    <Modal.Footer className=\"container-fluid\">\n                            <div className={isTicketShowing ? \"\" : \"d-none\"} >\n                                <Button  className=\"btn-secondary mx-2\" onClick={deleteTicket}>Delete</Button>\n                                <Button  className=\"btn-warning mx-2\" onClick={updateTicket}>Update</Button>\n                            </div>\n                            <div className={isCommentShowing ? \"\" : \"d-none\"} >\n                                <button className=\"btn btn-warning\" onClick={readyNewComment}>+ Comment</button>\n                            </div>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\n    export default ManageTicketModal;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n   \nimport React, { useEffect, useState } from \"react\"; \nimport {Modal,Button} from \"react-bootstrap\";\nimport API from \"../../utils/API\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction CreateTicketModal (props) {\n\n/* ------------------------------ Props Filters ----------------------------- */\n\n    // Define Current user into a variable for use in conditional class setting\n    const currentUser = props.currentUser;\n        console.log('CURRENT USER ON CREATE MODAL', currentUser);\n\n    // Take all users and filter it to employees for rendering list\n    const allEmployees = props.allUsers.filter(user=> user.role!=\"Client\");\n       \n    // Take all clients and filter to only name and id\n    const allClients = props.allClients.map(client => \n        (\n            {\n               name: client.name,\n               id: client.id \n            }\n        )\n    );\n\n   \n   \n/* ---------------------------------- State --------------------------------- */\n\n    // Set modal visability state to false by default\n    const [visability, setVisablity] = useState(false)\n\n/* ------------------------ Modal Visability Handlers ----------------------- */\n\n    // Show Modal\n    function openModal () {\n        setVisablity(true)\n    };\n\n    // Hide Modal\n    function closeModal () {\n        setVisablity(false)\n    };\n\n/* ------------------------ Handle Creation of Ticket ----------------------- */\n\n    // Define references and general variables for values on update\n    let Title = React.createRef();\n    let Priority = React.createRef();\n    let Status = React.createRef();\n    let Assignee = React.createRef();\n    let Description = React.createRef();\n    let Client = React.createRef();\n   \n    // Declare update handler function\n    function createTicket () {\n\n        // Define new ticket vairable to be set in next conditional\n        let newTicket;\n\n        // Check if client or not for ticket auto-populate\n        function checkClientTicketCreate () {\n            \n            if (currentUser.role!=\"Client\") {\n                // If not a client, make new ticket with fields set by manager or employee\n                newTicket = \n                    {\n                        title: Title.current.value,\n                        priority: Priority.current.value,\n                        status: Status.current.value,\n                        assigned_to: Assignee.current[Assignee.current.selectedIndex].getAttribute(\"data-user-id\"), \n                        description: Description.current.value,\n                        client_id: Client.current[Client.current.selectedIndex].getAttribute(\"data-client-id\"),\n                        team_id: currentUser.team_id, // Doing the team id of the user who is logged in\n                        points:\"10\" // hard coded for MVP since not sure how or where we use this\n                    }\n            }\n            else {\n               // Else if a Client, make assignee null, status to open and auto set client based on the current user (client) firm and firm id and status\n               newTicket = \n                    {\n                        title: Title.current.value,\n                        priority: Priority.current.value,\n                        status: \"Open\",\n                        assigned_to: null, // has to be assigned by manager later\n                        description: Description.current.value,\n                        client_id: currentUser.org_id,\n                        team_id:\"1\", // hard coded for MVP since not sure how or where we use this\n                        points:\"10\" // hard coded for MVP since not sure how or where we use this\n                    }\n            }\n        }\n\n        // Run the checkClientTicketCreate function\n        checkClientTicketCreate();\n\n        // Validate inputs and make API Call\n        if (newTicket.client_id !=null) {\n            // Make the API call to update the ticket if client selected\n            API.newTicket(newTicket)\n                .then(res=> console.log('axio post response', res))\n                .then(closeModal)\n                .then(window.location.reload())\n                .catch(err=>console.log(err));\n        }\n        else {\n            // If no client, alert them and do not make API call\n            alert(\"Please make sure you have selected a client for this new ticket!\")\n        };\n    };\n\n     /* ------------ Check For Client User Role For Conditional Render ----------- */\n        function checkClientComponentRender() {\n            if (currentUser.role!=\"Client\") {\n                return (\n                    <>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text col-3\">Assignee</span>\n                            <select ref={Assignee} className=\"form-select\" aria-label=\"Default select example\">\n                                <option value=\"\"></option>\n                                {\n                                allEmployees.map(employee => (\n                                    <option value={`${employee.first_name} ${employee.last_name}`} data-user-id={employee.id} key={employee.id}>\n                                        {`${employee.first_name} ${employee.last_name}`}\n                                    </option>\n                                ))\n                                }\n                            </select>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text col-3\">Client</span>\n                            <select ref={Client} className=\"form-select\" aria-label=\"Default select example\">\n                                <option value=\"\"></option>\n                                {\n                                allClients.map(client => (\n                                    <option value={client.name} data-client-id={client.id} key={client.id}>\n                                        {client.name}\n                                    </option>\n                                ))\n                                }\n                            </select>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text col-3\">Status</span>\n                            <select ref={Status} className=\"form-select\"  aria-label=\"Default select example\">\n                                <option value=\"Open\">Open</option>\n                                <option value=\"Assigned\">Assigned</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Completed\">Completed</option>\n                            </select>\n                        </div>\n                  </>\n                )\n            }\n            else {\n                return;\n            }\n        };\n\n\n/* -------------------- Modal Button and Modal Component -------------------- */\n\n    return (\n        <>\n            <button  className=\"btn btn-sm btn-warning\" variant=\"primary\" onClick={openModal}>\n                + Ticket\n            </button>\n            <Modal show={visability} onHide={closeModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Ticket Info</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        <h5 className= \"text-center\">Ticket Details</h5>\n                            <div className=\"input-group mb-3\">\n                                <span className=\"input-group-text col-3\">Ticket Title</span>\n                                <input type=\"text\" ref={Title} className=\"form-control\" placeholder=\"Enter Ticket Title...\" aria-label=\"Title\" aria-describedby=\"titleinput\"/> \n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <span className=\"input-group-text col-3\">Description</span>\n                                <textarea ref={Description} className=\"form-control\" placeholder=\"Enter Description...\" aria-label=\"With textarea\"></textarea>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <span className=\"input-group-text col-3\">Priority</span>\n                                <select ref={Priority} className=\"form-select\" aria-label=\"Default select example\">\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select> \n                            </div>\n                            {\n                                checkClientComponentRender()\n                            }\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button  className=\"text-center btn-warning\" onClick={createTicket}>Create Ticket</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\n    export default CreateTicketModal;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\n  import { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\n  import React, { useState, useEffect } from \"react\";\n  import ManageTicketModal from \"../ManageTicketModal\";\n  import CreateTicketModal from '../CreateTicketModal';\n  import SectionHeader from \"../SectionHeader\";\n  import './index.css';\n  \n/* -------------------------------------------------------------------------- */\n/*                     Define Employee Table SubComponents                    */\n/* -------------------------------------------------------------------------- */\n\n/* ------------------- Global Filter (Search Bar) Subcomponent ------------------ */\n\n  // Define a default UI for filtering\n  function GlobalFilter({\n      globalFilter,\n      setGlobalFilter,\n    }) {\n      const [value, setValue] = React.useState(globalFilter)\n      const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n      }, 200)\n\n      // This is the UI Component to Return for the search\n      return (\n            <form>\n                <div id=\"searchHelp\" className=\"form-text text-center\">Type to search, or select a column header to sort</div> \n                <div className=\" mt-2 mb-1 col-5 mx-auto\">\n                      <label className=\"visually-hidden\">Search</label>\n                      <div className=\"input-group input-group-sm d-flex justify-content-center\">\n                          <span className=\"me-3 align-middle d-flex align-items-center text-primary\"> \n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n                            </svg>\n                          </span>\n                          <input className=\"form-control\" value={value || \"\"} onChange={e => {setValue(e.target.value); onChange(e.target.value); }} placeholder={`Search`}/> \n                      </div>\n                </div>\n            </form>\n      )\n    }\n\n  /* --------------------------- Table Subcomponent --------------------------- */\n\n  function Table({columns,data}) {\n\n      // Setup the filtertypes\n      const filterTypes = React.useMemo(\n          () => ({\n          text: (rows, id, filterValue) => {\n              return rows.filter(row => {\n              const rowValue = row.values[id]\n              return rowValue !== undefined\n                  ? String(rowValue)\n                      .toLowerCase()\n                      .startsWith(String(filterValue).toLowerCase())\n                  : true\n              })\n          },\n          }),\n          []\n      )\n\n    // Setup Default Column (Default Filter UI)\n    const defaultColumn = React.useMemo(\n      () => ({\n        Filter: GlobalFilter,\n      }),\n      []\n    )\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      state,\n      preGlobalFilteredRows,\n      setGlobalFilter,\n    } = useTable(\n      {\n        columns,\n        data,\n        defaultColumn, \n        filterTypes,\n      },\n      useFilters, \n      useGlobalFilter,\n      useSortBy\n    )\n\n    // Render the UI for the table, using bootstrap classes\n    return (\n      <div className=\"mx-3 my-2 p-2 divvy-bg-tile shadow\">\n        <div>\n            <GlobalFilter className=\"d-inline\"\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n        </div>\n        <table {...getTableProps()} className=\"table table-hover align-middle shadow-sm mt-2 \">\n          <thead>\n            {// Loop over the header rows\n            headerGroups.map(headerGroup => (\n              // Apply the header row props\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {// Loop over the headers in each row\n                headerGroup.headers.map(column => (\n                  // Apply the header cell props and ad in props to control sorting\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {// Render the header and add sort direction indicator\n                    column.render('Header')}\n                    <span>\n                      {column.isSorted\n                          ? column.isSortedDesc\n                            ? ' 🔽'\n                            : ' 🔼'\n                          : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {rows.map((row, i) => {\n              // Prepare the row for display\n              prepareRow(row)\n              return (\n                // Apply the row props\n                <tr {...row.getRowProps()}>\n                  {// Loop over the rows cells\n                  row.cells.map(cell => {\n                    // Apply the cell props\n                    return (\n                      <td {...cell.getCellProps()}>\n                        {// Render the cell contents\n                        cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      )\n  }\n\n/* -------------------------------------------------------------------------- */\n/*                 Define Main Component For Exporting Default                */\n/* -------------------------------------------------------------------------- */\n\n\n  function TicketTable(props) {\n\n    //console.log('ticket table props', props);\n\n    const createTicketModal = <CreateTicketModal allUsers={props.allUsers} allClients={props.allClients} currentUser={props.currentUser}/>;\n\n    // Map through tickets and create a new object array matching my table accessors order and names\n    let ticket = props.allTickets.map (ticket => \n      (\n        {\n          button:<ManageTicketModal\n                    currentUser={props.currentUser}\n                    allUsers={props.allUsers} \n                    ticketTitle={ticket.title} \n                    ticketPriority={ticket.priority}\n                    ticketStatus={ticket.status}\n                    ticketAssignee={ticket.ticketuser ? `${ticket.ticketuser.first_name} ${ticket.ticketuser.last_name}`:\"\"}\n                    ticketAssigneeId={ticket.ticketuser ? ticket.ticketuser.id:\"\"}\n                    ticketDescription={ticket.description}\n                    ticketID={ticket.id}\n                    ticketFirm={ticket.client.name}\n                    ticketFirmContact={ticket.client.contact[0] ? `${ticket.client.contact[0].first_name} ${ticket.client.contact[0].last_name}`:\"\"}\n                    ticketFirmPhone={ticket.client.contact[0] ? ticket.client.contact[0].phone_number:\"\" }\n                    ticketComments={ticket.comments}\n                  />,\n          id:ticket.id,\n          title: ticket.title,\n          firm: ticket.client.name, \n          contact_name: ticket.client.contact[0] ? `${ticket.client.contact[0].first_name} ${ticket.client.contact[0].last_name} ` : \"\" ,\n          contact_phone: ticket.client.contact[0] ? ticket.client.contact[0].phone_number : \"\" ,\n          priority: ticket.priority,\n          status: ticket.status,\n          assignee: ticket.ticketuser ? `${ticket.ticketuser.first_name} ${ticket.ticketuser.last_name} ` : \"\"\n        }\n      )\n    );\n\n    // Define columns for table\n    const columns = React.useMemo(\n      () => [\n        {\n          Header: createTicketModal,\n          accessor:\"button\",\n          disableSortBy: true\n        },\n        {\n          Header: 'ID',\n          accessor: 'id', // accessor is the \"key\" in the data to use below\n        },\n        {\n          Header: 'Title',\n          accessor: 'title', \n        },\n        {\n          Header: 'Firm',\n          accessor: 'firm',\n        },\n        {\n          Header: 'Contact Name',\n          accessor: 'contact_name',\n        },\n        {\n          Header: 'Contact Phone',\n          accessor: 'contact_phone',\n        },\n        {\n          Header: 'Priority',\n          accessor:'priority',\n        },\n        {\n          Header: 'Status',\n          accessor: 'status',\n        },\n        {\n          Header: 'Assignee',\n          accessor: 'assignee',\n        },\n      ],\n      \n    )\n\n    // Define data for table\n      // //eslint-disable-next-line\n      const data = React.useMemo(() => ticket);\n\n    // Return the Table With Data For Rendering and the Search Filter\n      return (\n        <div className=\"divvy-bg-tile table-wrapper overflow-auto\">\n          <SectionHeader>Tickets</SectionHeader>\n          <Table \n            columns={columns} \n            data={data}\n            defaultPageSize={20}\n            style={{\n              height:\"400px\"\n            }}\n          />\n        </div>\n      )\n\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                              Export Component                              */\n  /* -------------------------------------------------------------------------- */\n\n      export default TicketTable;\n","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\n  import { useTable, useSortBy, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n  import React from \"react\";\n  \n/* ------------------- Global Filter (Search Bar) Subcomponent ------------------ */\n\n  // Define a default UI for filtering\n  function GlobalFilter({\n      globalFilter,\n      setGlobalFilter,\n    }) {\n      const [value, setValue] = React.useState(globalFilter)\n      const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n      }, 200)\n\n      // This is the UI Component to Return for the search\n      return (\n            <form>\n                <div className=\"col mx-auto mt-2 mb-1\">\n                    <label className=\"visually-hidden\">Search</label>\n                    <div className=\"input-group input-group-sm\">\n                        <span className=\"me-3 align-middle d-flex align-items-center text-primary\"> \n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n                          </svg>\n                        </span>\n                        <input className=\"form-control\" value={value || \"\"} onChange={e => {setValue(e.target.value); onChange(e.target.value); }} placeholder={`Search`}/>   \n                    </div>\n                </div>\n            </form>\n      )\n    }\n\n  /* --------------------------- Table Subcomponent --------------------------- */\n\n  function Table({columns,data}) {\n\n      // Setup the filtertypes\n      const filterTypes = React.useMemo(\n          () => ({\n          text: (rows, id, filterValue) => {\n              return rows.filter(row => {\n              const rowValue = row.values[id]\n              return rowValue !== undefined\n                  ? String(rowValue)\n                      .toLowerCase()\n                      .startsWith(String(filterValue).toLowerCase())\n                  : true\n              })\n          },\n          }),\n          []\n      )\n\n    // Setup Default Column (Default Filter UI)\n    const defaultColumn = React.useMemo(\n      () => ({\n        Filter: GlobalFilter,\n      }),\n      []\n    )\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      state,\n      preGlobalFilteredRows,\n      setGlobalFilter,\n    } = useTable(\n      {\n        columns,\n        data,\n        defaultColumn, \n        filterTypes,\n      },\n      useFilters, \n      useGlobalFilter,\n      useSortBy\n    )\n\n    // Render the UI for the table, using bootstrap classes\n    return (\n      <div className=\"mx-4\">\n        <div>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n        </div>\n        <table {...getTableProps()} className=\"table align-middle shadow-sm\">\n          <thead>\n            {// Loop over the header rows\n            headerGroups.map(headerGroup => (\n              // Apply the header row props\n              <tr className=\"table-info\" {...headerGroup.getHeaderGroupProps()}>\n                {// Loop over the headers in each row\n                headerGroup.headers.map(column => (\n                  // Apply the header cell props and ad in props to control sorting\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {// Render the header and add sort direction indicator\n                    column.render('Header')}\n                    <span>\n                      {column.isSorted\n                          ? column.isSortedDesc\n                            ? ' 🔽'\n                            : ' 🔼'\n                          : ''}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {rows.map((row, i) => {\n              // Prepare the row for display\n              prepareRow(row)\n              return (\n                // Apply the row props\n                <tr {...row.getRowProps()}>\n                  {// Loop over the rows cells\n                  row.cells.map(cell => {\n                    // Apply the cell props\n                    return (\n                      <td {...cell.getCellProps()}>\n                        {// Render the cell contents\n                        cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      )\n  }\n\n/* -------------------------------------------------------------------------- */\n/*                 Define Main Component For Exporting Default                */\n/* -------------------------------------------------------------------------- */\n\n \n\n  function TicketTableMobile(props) {\n\n    // Check props\n    console.log(\"Props.allTickets as passed into Ticket Tables is...\" , props.allTickets);\n\n\n    // Map through tickets and create a new object array matching my table accessors order and names\n    let ticket = props.allTickets.map (ticket => \n      (\n        {\n          id:ticket.id,\n          title: ticket.title,\n        }\n      )\n    );\n\n    // Define columns for table\n    const columns = React.useMemo(\n      () => [\n        {\n          Header: 'ID',\n          accessor: 'id',\n        },\n        {\n          Header: 'Title',\n          accessor: 'title', // accessor is the \"key\" in the data to use below\n        },\n      ],\n      []\n    )\n\n    // Define data for table\n        //eslint-disable-next-line\n        const data = React.useMemo(() => ticket)\n\n\n    // Return the Table With Data For Rendering and the Search Filter\n      return (\n        <div>\n          <Table columns={columns} data={data} />\n        </div>\n      )\n\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                              Export Component                              */\n  /* -------------------------------------------------------------------------- */\n\n      export default TicketTableMobile;\n","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction EmployeeCard(props) {\n    return (\n        <div tag=\"a\" onClick={props.handleClick} data-vl={props.employeeID} data-type=\"ID\" ID={props.employeeID} style={{ cursor: \"pointer\" }} className=\"card employeecard clear_border col-3 m-1 text-center float-left px-0\" data-component=\"employeecard\">\n            <div className=\"card-header\" data-vl={props.employeeID} data-type=\"ID\">\n                {/* <div className=\"card-text\" data-vl={props.employeeID} data-type=\"ID\">{props.employeeTickets}</div> */}\n                <div className=\"card-text\" data-vl={props.employeeID} data-type=\"ID\"><span className={props.className} data-vl={props.employeeID} data-type=\"ID\">{props.employeeTickets}</span></div>\n            </div>\n            <div className=\"card-body p-1\" data-vl={props.employeeID} data-type=\"ID\">\n                <div className=\"my-3 text-center\" data-vl={props.employeeID} data-type=\"ID\">\n                    <img \n                        src={props.profileIcon\n                        ? \n                        props.profileIcon : \"https://www.pngitem.com/pimgs/m/30-307416_profile-icon-png-image-free-download-searchpng-employee.png\"} \n                        width=\"50px\" \n                        alt=\"profile picture\" \n                        className=\" border border-warning shadow-lg rounded-pill\"\n                        data-vl={props.employeeID} data-type=\"ID\"\n                    >\n                    </img>\n                </div>\n                <p className=\"card-text align-middle\" data-vl={props.employeeID} data-type=\"ID\">{props.employeeName}</p>\n            </div>\n        </div>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default EmployeeCard;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport EmployeeCard from \"../EmployeeCard\";\nimport API from \"../../utils/API\";\nimport { useEffect, useState } from \"react\";\nimport SectionHeader from \"../SectionHeader\";\nimport \"./index.css\"; \nimport \"../../index.css\";\nimport { Badge } from \"react-bootstrap\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction EmployeeCardContainer(props) {\n\n    console.log('PROPS in EMPLOYEE CARD CONTAINER', props);\n\n    // Declare a global variable for this container all Employees\n    let allEmployees;\n\n    // Declare a function to sort employees\n    function filterTeamEmployees() {\n        // Take all users and filter it to employees\n        allEmployees = props.allUsers.filter(user => user.role != \"Client\");;\n        if (allEmployees.length > 1) {\n            allEmployees = allEmployees.map((element) => {\n                return {...element, ticketuser: element.ticketuser.filter((ticketuser) => ticketuser.status != \"Completed\")}\n              })\n        }\n\n        // Sort employees by their ticket count (due to mounting, make sure its not blank first)\n        if (allEmployees.length != 0) {\n            allEmployees.sort((a, b) => (a.ticketuser.length > b.ticketuser.length ? 1 : -1));\n        };\n    }\n\n    // Invoke the function to sort and filter employees\n    filterTeamEmployees()\n\n    \n    // Declare a functoin for setting ticket colors on the profile cards by index of map (position they are in the sort) - SAVING AS BACKUP\n        /*\n            function setBadgeColor (index) {\n                if (index <3) {\n                    return \"badge alert-success\"\n                } \n                else if (index > 2 && index < 6) {\n                return \"badge alert-info\"\n                }\n                else if (index > 5 && index < 9) {\n                    return \"badge alert-warning\"\n                }\n                else if (index > 8) {\n                    return \"badge alert-secondary\"\n                }\n                else {\n                    return \"badge alert-light\"\n                }\n            };\n        */\n\n    function setBadgeColorByWeight (ticketsNotClosed, employeeTickets ) {\n\n        // Determine weight of total ticket count\n        const weight = employeeTickets/ticketsNotClosed;\n            console.log('weight of tikets is showing as', weight);\n        \n        // Set badge color based on weights\n        if (weight <0.15) {\n            return \"badge alert-success\"\n        } \n        else if (weight> 0.14 && weight < 0.25) {\n           return \"badge alert-info\"\n        }\n        else if (weight > 0.24 && weight < 0.50) {\n            return \"badge alert-warning\"\n        }\n        else if (weight > 0.49) {\n            return \"badge alert-danger\"\n        }\n        else {\n            return \"badge alert-light\"\n        }\n    };\n\n    // Render the Component by mapping employees and rending sub compoennt in container\n    return (\n        <div className=\"divvy-bg-tile fix-height overflow-auto\">\n            <SectionHeader>Available Employees</SectionHeader>\n            <div className=\"d-flex flex-wrap justify-content-center\">\n                {allEmployees.map((employee, index) => {\n                    return index < 3 ? (\n                        <EmployeeCard\n                            key={employee.id}\n                            employeeName={`${employee.first_name} ${employee.last_name}`}\n                            employeeTickets={employee.ticketuser ? (`Tickets (${employee.ticketuser.length})`) : (\"Tickets (0)\")}\n                            className={employee.ticketuser ? (setBadgeColorByWeight(props.activeTicketCount, employee.ticketuser.length)) : (\"badge alert-success\")}\n                            //className={setBadgeColor(index)} - saving this as backup in case we want to use this sorter function\n                            employeeID={employee.id}\n                            profileIcon={employee.profile_icon}\n                            handleClick={props.handleClick}\n                        />\n                    ) :\n                        <EmployeeCard\n                            key={employee.id}\n                            employeeName={`${employee.first_name} ${employee.last_name}`}\n                            employeeTickets={employee.ticketuser ? (`Tickets (${employee.ticketuser.length})`) : (\"Tickets (0)\")}\n                            className={employee.ticketuser ? (setBadgeColorByWeight(props.activeTicketCount, employee.ticketuser.length)) : (\"badge alert-success\")}\n                            //className={setBadgeColor(index)} - saving this as backup in case we want to use this sorter function\n                            employeeID={employee.id}\n                            profileIcon={employee.profile_icon}\n                            handleClick={props.handleClick}\n                        />\n                })}\n            </div>\n        </div>\n        \n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default EmployeeCardContainer;\n\n//     {allEmployees.map(employee => (\n//         <EmployeeCard\n//            key = {employee.id}\n//            employeeName={`${employee.first_name} ${employee.last_name}`}\n//            employeeTickets={employee.ticketuser.length ? (\"Tickets: \" + employee.ticketuser.length) : (\"Tickets: 0\")}\n//         />\n//    ))}","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport \"../../index.css\";\n\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction StatCard(props) {\n    return (\n        <div tag=\"a\" onClick={props.handleClick} data-vl={props.title} id={props.title} data-type=\"Status\" style={{ cursor: \"pointer\" }} className=\" card col-2 mx-3 shadow mb-2 text-center float-left px-0 statCard\" data-component=\"employeecard\">\n            <div className=\"card-body p-1\" data-vl={props.title} data-type=\"Status\">\n                <h6 className=\"card-text fw-bold\" data-vl={props.title} data-type=\"Status\">{props.title}</h6>\n                <p className=\"card-text\" data-vl={props.title} data-type=\"Status\">{props.amount}</p>\n            </div>\n        </div>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default StatCard;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport StatCard from \"../StatCard\";\nimport \"../../index.css\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction StatCardContainer(props) {\n\n    // Handle Getting Total Tickets \n    const totalTickets = props.allTickets;\n    const totalTicketsNumber = props.allTickets.length;\n\n    // Handle Getting Open Tickets (confirm status is 0)\n    let openTickets = totalTickets.filter(ticket => ticket.status == \"Open\");\n\n    // Handle Getting Unassigned (and open) tickets\n    /*\n        I filter based on two conditions. If its unassigned, and if its open. If\n        its closed it doesnt matter, and the numbers look weird if you have\n        \"15 unassigned\" but only \"5\" open\n    */\n    let unassignedTickets = totalTickets.filter(ticket => ticket.assigned_to === null && ticket.status != \"Completed\");\n\n    function checkClient() {\n        if (props.currentUser.role != \"Client\") {\n            return (\n                <StatCard\n                    title=\"Assigned To Me\"\n                    amount={props.assignedTicketCount}\n                    handleClick={props.handleClick}\n                />\n            )\n        }\n        else {\n            return;\n        }\n    };\n\n    console.log(\"statCard: \", props);\n    // Return the three primary status card components\n    return (\n        <div className=\"mb-3 divvy-bg-tile\">\n            <div className=\"d-flex flex-wrap justify-content-center py-3\" data-component=\"StatCardContainer\">\n                {checkClient()}\n                {/* <StatCard\n                    title=\"Assigned To Me\"\n                    amount={props.assignedTicketCount}\n                    handleClick={props.handleClick}\n                /> */}\n                <StatCard\n                    title=\"Total Active\"\n                    amount={props.activeTicketCount}\n                    handleClick={props.handleClick}\n                />\n                <StatCard\n                    title=\"Open\"\n                    amount={props.openTicketCount}\n                    handleClick={props.handleClick}\n                />\n                <StatCard\n                    title=\"Unassigned\"\n                    amount={props.unassignedTicketCount}\n                    handleClick={props.handleClick}\n                />\n                <StatCard\n                    title=\"Completed\"\n                    amount={props.completedTicketCount}\n                    handleClick={props.handleClick}\n                />\n            </div>\n        </div>\n\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default StatCardContainer;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"../../components/Container\";\nimport Row from \"../../components/Row\";\nimport Col from \"../../components/Column\";\nimport TicketTable from \"../../components/TicketTable\";\nimport TicketTableMobile from \"../../components/TicketTableMobile\";\nimport EmployeeCardContainer from \"../../components/EmployeeCardContainer\";\nimport StatCardContainer from \"../../components/StatCardContainer\";\nimport { useMediaQuery } from 'react-responsive';\nimport API from \"../../utils/API\";\n\n\n/* -------------------------------------------------------------------------- */\n/*                           Set Mobile BreakPoints                           */\n/* -------------------------------------------------------------------------- */\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\nfunction Dashboard() {\n\n    /* ---------------------------------- Set State --------------------------------- */\n    // Set tickets\n    const [tickets, setTickets] = useState([\n        {\n            client: {\n                contact: []\n            }\n        }\n    ])\n\n    // set current user\n    const [currentUser, setCurrentUser] = useState({})\n\n    // Set users\n    const [users, setUsers] = useState([{}])\n\n    // Set clients\n    const [clients, setClients] = useState([{}])\n\n    // set total assigned to me ticket count\n    const [countTicketAssigned, setCountTicketAssigned] = useState()\n\n    // set total active ticket count\n    const [countTicketActive, setCountTicketActive] = useState()\n\n    // set open ticket count\n    const [countTicketOpen, setCountTicketOpen] = useState()\n\n    // set unassigned ticket count\n    const [countTicketUnassigned, setCountTicketUnassigned] = useState()\n\n    // set completed ticket count\n    const [countTicketCompleted, setCountTicketCompleted] = useState()\n    /* --------------------------------- Get Tickets -------------------------------- */\n\n    let assignedTicketCount = 0;\n    let activeTicketCount = 0;\n    let unassignedTicketCount = 0;\n    let openTicketCount = 0;\n    let completedTicketCount = 0;\n    // Load all tickets and store them in tickets\n\n    // Call when components have loaded\n    useEffect(() => {\n        const filterType = \"Initial Load\"\n        const filterValue = null\n        getTickets(filterType, filterValue)\n    }, [])\n\n    // Load All Tickets and Set Them to state\n    function getTickets(filterType, filterValue) {\n        API.getAllTickets()\n            .then(resTickets => {\n                console.log(\"TICKETS\", resTickets.data);\n                API.getCurrentUser()\n                    .then(resUser => {\n                        let filteredTickets;\n                        if (resUser.data.role === \"Client\") {\n                            console.log(\"client\");\n                            filteredTickets = resTickets.data.filter(ticketsData => {\n                                return ticketsData.client_id === resUser.data.client_id;\n                            });\n                        } else if (resUser.data.role === \"Employee\" && resUser.data.is_manager) {\n                            console.log(\"employee & manager\");\n                            filteredTickets = resTickets.data.filter(ticketsData => {\n                                return ticketsData.team_id === resUser.data.team_id;\n                            });\n                        } else if (resUser.data.role === \"Employee\" && !resUser.data.is_manager) {\n                            console.log(\"employee & not manager\");\n                            filteredTickets = resTickets.data.filter(ticketsData => {\n                                // return ((ticketsData.assigned_to === resUser.data.id || ticketsData.assigned_to === null) && ticketsData.team_id === resUser.data.team_id);\n                                return ticketsData.team_id === resUser.data.team_id;\n                            });\n                        } else {\n                            filteredTickets = resTickets.data;\n                        }\n\n                        console.log(\"filteredTickets: \", filteredTickets);\n\n                        const totalTickets = filteredTickets;\n\n                        let assignedTickets = totalTickets.filter(ticket => ticket.assigned_to === resUser.data.id);\n                        assignedTicketCount = assignedTickets.length;\n                        setCountTicketAssigned(assignedTicketCount);\n\n                        let activeTickets = totalTickets.filter(ticket => ticket.status != \"Completed\");\n                        activeTicketCount = activeTickets.length;\n                        setCountTicketActive(activeTicketCount);\n\n                        let openTickets = totalTickets.filter(ticket => ticket.status == \"Open\");\n                        openTicketCount = openTickets.length;\n                        setCountTicketOpen(openTicketCount);\n\n                        let unassignedTickets = totalTickets.filter(ticket => ticket.assigned_to === null && ticket.status != \"Completed\");\n                        unassignedTicketCount = unassignedTickets.length;\n                        setCountTicketUnassigned(unassignedTicketCount);\n\n                        let completedTickets = totalTickets.filter(ticket => ticket.status === \"Completed\");\n                        completedTicketCount = completedTickets.length;\n                        setCountTicketCompleted(completedTicketCount);\n\n                        let filteredTicketsFinal;\n                        switch (filterType) {\n                            case \"Initial Load\":\n                                if (resUser.data.role === \"Client\") {\n                                    filteredTicketsFinal = filteredTickets.filter(ticket => ticket.status != \"Completed\");\n                                } else {\n                                    filteredTicketsFinal = filteredTickets.filter(ticketsData => {\n                                        return ticketsData.assigned_to === resUser.data.id;\n                                    });\n                                }\n                                break;\n                            case \"ID\":\n                                filteredTicketsFinal = filteredTickets.filter(ticketsData => {\n                                    return (ticketsData.assigned_to === filterValue && ticketsData.status != \"Completed\");\n                                });\n                                break;\n                            case \"Status\":\n                                filteredTicketsFinal = filteredTickets.filter(ticketsData => {\n                                    return ticketsData.status === filterValue;\n                                });\n                                break;\n                            default:\n                                filteredTicketsFinal = filteredTickets.filter(ticket => ticket.status != \"Completed\");\n                                // filteredTicketsFinal = filteredTickets;\n                                break;\n                        }\n\n                        //console.log(\"filteredTickets: \", filteredTickets);\n                        if (filterType === \"Initial Load\" && resUser.data.role === \"Client\") {\n                            document.getElementById(\"Total Active\").style.borderColor = \"rgb(255,193,7)\";\n                        } else if (filterType === \"Initial Load\") {\n                            document.getElementById(\"Assigned To Me\").style.borderColor = \"rgb(255,193,7)\";\n                        }\n                        setTickets(filteredTicketsFinal);\n                    }\n                    )\n\n\n            })\n            .catch(err => console.log(err));\n    };\n\n    /* ---------------------------- Get Current User ---------------------------- */\n\n    // Call when components have loaded\n    useEffect(() => {\n        getCurrentUser();\n    }, [])\n\n    // Set current User State\n    function getCurrentUser() {\n        API.getCurrentUser()\n            .then(res => {\n                console.log(\"CURRENT USER\", res.data);\n                setCurrentUser(res.data);\n            }\n            )\n    }\n\n\n    /* -------------------------------- Get Users---------------------------------- */\n\n    // Load all employees and store them in employees\n\n    // Call when components have loaded\n    useEffect(() => {\n        getUsers();\n    }, [])\n\n\n    // Load all USERS\n    function getUsers() {\n        API.getAllUsers()\n            .then(res => {\n                //console.log(\"RES.DATA\", res.data);\n                getUserTeamid(res.data)\n            })\n            .catch(err => console.log(err));\n    }\n\n    // Set the user state\n    function getUserTeamid(x) {\n        API.getCurrentUser()\n            .then(res => {\n                // console.log(\"CURRENT USER\", res.data);\n                // console.log(\"X\", x);\n\n                const teamEmployees = x.filter(user => {\n                    // console.log(\"FILTERING\");\n                    return user.team_id === res.data.team_id\n                });\n\n                //console.log(\"TEAM EMPLOYEES\", teamEmployees);\n\n                setUsers(teamEmployees);\n            })\n            .catch(err => console.log(err));\n    };\n\n    function sortEmployeesByTickets() {\n\n        // Take all users and filter it to employees\n        const allEmployees = props.allUsers.filter(user => user.role != \"Client\");\n\n        // Soort employees by their ticket count (due to mounting, make sure its not blank first)\n        if (allEmployees.length != 0) {\n            allEmployees.sort((a, b) => (a.ticketuser.length > b.ticketuser.length ? 1 : -1));\n        };\n\n        return allEmployees;\n    }\n\n    /* -------------------------------- Get Clients ---------------------------------- */\n\n    // Load all clients and store them in clients\n\n    // Call when components have loaded\n    useEffect(() => {\n        getClients();\n\n    }, [])\n\n\n    // Load all USERS\n    function getClients() {\n        API.getAllClients()\n            .then(res =>\n                setClients(res.data)\n            )\n            .catch(err => console.log(err));\n    };\n\n    /* -------------------------------- handleClick ---------------------------------- */\n\n    function handleClick(e) {\n        let filterValue = e.target.dataset.vl;\n        let filterType = e.target.dataset.type;\n\n        const statCards = document.querySelectorAll(\".statCard\");\n        for (let index = 0; index < statCards.length; index++) {\n            statCards[index].style.borderColor = \"\";\n        };\n\n        const employeeCards = document.querySelectorAll(\".employeecard\");\n        for (let index = 0; index < employeeCards.length; index++) {\n            employeeCards[index].style.borderColor = \"\";\n        };\n        \n        switch (filterType) {\n            case \"Status\":\n                document.getElementById(filterValue).style.borderColor = \"rgb(255,193,7)\";\n                switch (filterValue) {\n                    case \"Total Active\":\n                        filterType = \"All\";\n                        break;\n                    case \"Open\":\n                        break;\n                    case \"Assigned To Me\":\n                        filterType = \"ID\";\n                        filterValue = currentUser.id;\n                        break;\n                    case \"Unassigned\":\n                        filterType = \"ID\";\n                        filterValue = null;\n                        break;\n                    default:\n                        break;\n                }\n                getTickets(filterType, filterValue);\n                break;\n            case \"ID\":\n\n                document.getElementById(filterValue).style.borderColor = \"rgb(255,193,7)\";\n                filterValue = parseInt(filterValue);\n                getTickets(filterType, filterValue);\n                break;\n            default:\n                break;\n        }\n    };\n\n    /* ------------ Check For Client User Role For Conditional Render ----------- */\n    function checkClient() {\n        if (currentUser.role != \"Client\") {\n            return (\n                <Col className=\"col-lg-4 align-items-center\">\n                    <EmployeeCardContainer\n                        allUsers={users}\n                        activeTicketCount={countTicketActive}\n                        handleClick={handleClick}\n                    />\n                </Col>\n            )\n        }\n        else {\n            return;\n        }\n    };\n\n    /* ---------------------------- Component Render ---------------------------- */\n    return (\n        <Container className=\" mt-3 mx-3\">\n            <Row>\n                <Col className={currentUser.role != \"Client\" ? \"col-lg-8 mx-auto px-0\" : \"col-lg-11 mx-auto px-0\"}>\n                    <StatCardContainer\n                        allTickets={tickets}\n                        assignedTicketCount={countTicketAssigned}\n                        activeTicketCount={countTicketActive}\n                        openTicketCount={countTicketOpen}\n                        unassignedTicketCount={countTicketUnassigned}\n                        completedTicketCount={countTicketCompleted}\n                        handleClick={handleClick}\n                        currentUser={currentUser}\n                    />\n                    <Default>\n                        <TicketTable\n                            allTickets={tickets}\n                            allUsers={users}\n                            allClients={clients}\n                            currentUser={currentUser}\n                        />\n                    </Default>\n                    <Mobile>\n                        <TicketTableMobile\n                            allTickets={tickets}\n                            allUsers={users}\n                            allClients={clients}\n                            currentUser={currentUser}\n                        />\n                    </Mobile>\n                </Col>\n                {\n                    checkClient()\n                }\n            </Row>\n            <Row>\n                <div className=\"text-danger text-center divvy-font-logo fs-3 p-3\">\n                    Let's Divvy\n                    </div>\n            </Row>\n        </Container>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Dashboard;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Col from \"../../components/Column\";\nimport Row from \"../../components/Row\";\nimport Container from \"../../components/Container\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction NewTeamForm(props) {\n  return (\n    <>\n    <h4 className=\"text-center my-3\">New Client Form</h4>\n      <form>\n        <Row>\n          <Col className=\"col-lg-5 mx-auto\">\n            {/* Firm */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputFirmName\" className=\"form-label\">Firm</label>\n              <input ref={props.refFirm} type=\"text\" className=\"form-control\" id=\"InputFirmName\" aria-describedby=\"firmName\" />\n            </div>\n\n            {/* Client First Name */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputClientFirstName\" className=\"form-label\">First Name</label>\n              <input ref={props.refFirstName} type=\"text\" className=\"form-control\" id=\"InputClientFirstName\" aria-describedby=\"clientFirstName\" />\n            </div>\n\n            {/* Client Last Name */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputClientLastName\" className=\"form-label\">Last Name</label>\n              <input ref={props.refLastName} type=\"text\" className=\"form-control\" id=\"InputClientLastName\" aria-describedby=\"clientLastName\" />\n            </div>\n\n            {/* Email */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputEmail\" className=\"form-label\">Email</label>\n              <input ref={props.refEmail} type=\"text\" className=\"form-control\" id=\"InputEmail\" aria-describedby=\"email\" />\n            </div>\n\n\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputPhone\" className=\"form-label\">Phone</label>\n              <input ref={props.refPhone} type=\"text\" className=\"form-control\" id=\"InputPhone\" aria-describedby=\"email\" />\n            </div>\n          </Col>\n          <Col className=\"col-lg-5 mx-auto\">\n            {/* Address 1 */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputAdd1\" className=\"form-label\">Address 1</label>\n              <input ref={props.refAdd1} type=\"text\" className=\"form-control\" id=\"InputAdd1\" aria-describedby=\"add1\" />\n            </div>\n\n            {/* Address 2 */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputAdd2\" className=\"form-label\">Address 2</label>\n              <input ref={props.refAdd2} type=\"text\" className=\"form-control\" id=\"InputAdd2\" aria-describedby=\"add2\" />\n            </div>\n\n            {/* City */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputCity\" className=\"form-label\">City</label>\n              <input ref={props.refCity} type=\"text\" className=\"form-control\" id=\"InputCity\" aria-describedby=\"city\" />\n            </div>\n\n            {/* State */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputState\" className=\"form-label\">State</label>\n              <input ref={props.refState} type=\"text\" className=\"form-control\" id=\"InputState\" aria-describedby=\"state\" />\n            </div>\n\n            {/* Zip */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputZip\" className=\"form-label\">Zip</label>\n              <input ref={props.refZip} type=\"text\" className=\"form-control\" id=\"InputZip\" aria-describedby=\"zip\" />\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n                <div className=\"text-center text-center my-3\">\n                  <button onClick={props.handleNewClientSubmit} type=\"submit\" className=\"btn btn-warning\">Create</button>\n                </div>\n          </Col>\n        </Row>\n      </form>\n\n    </>\n\n\n  )\n\n\n\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default NewTeamForm;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Col from \"../Column\";\nimport Row from \"../Row\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n\nfunction NewTeamForm(props) {\n  console.log(props.name);\n  \n  return (\n    <>\n      <h4 className=\"text-center my-3\">New Team Form</h4>\n        <form id=\"team\" onClick={props.handleCreateClick}>\n          <Row>\n            <Col className=\"col-lg-6 mx-auto\">\n              {/* Team */}\n                <div className=\" text-center\">\n                  <label htmlFor=\"test\" className=\"form-label\">Team Name</label>\n                  <input ref={props.refTeamName} type=\"text\" className=\"form-control\" id=\"test\" aria-describedby=\"teamName\" />\n                </div>\n                <div className=\"text-center\">\n                  <button onClick={props.handleNewTeamSubmit} type=\"submit\" className=\"btn btn-warning my-3\">Create</button>\n                </div>\n            </Col>\n          </Row>\n        </form>\n    </>\n  )\n\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default NewTeamForm;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport Col from \"../Column\";\nimport Row from \"../Row\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\n\nfunction NewEmpForm(props) {\n\n  console.log(props.teams);\n  return (\n    <>\n      <h4 className=\"text-center my-3\">New Employee Form</h4>\n      <form id=\"team\" onClick={props.handleCreateClick}>\n        <Row>\n          <Col className=\"col-lg-6 mx-auto\">\n            {/* Team Selection */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"SelectTeam\" className=\"form-label\">Select Team</label>\n              <select ref={props.refTeamSelected} name=\"selectList\" id=\"selectList\" className=\"form-select\">\n                {props.teams.map((team) => {\n                  return (\n                    <option key={team.id} value={team.id}>{team.name}</option>\n                  )\n                })}\n              </select>\n            </div>\n\n            {/* Manager Selection */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputEmpFirstName\" className=\"form-label\">Is Manager</label>\n              <select ref={props.refIsManager} name=\"selectList\" id=\"selectList\" className=\"form-select\">\n                    <option value={false}>No</option>\n                    <option value={true}>Yes</option>\n              </select>\n            </div>\n\n            {/* Emp First Name */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputEmpFirstName\" className=\"form-label\">First Name</label>\n              <input ref={props.refEmpFirstName} type=\"text\" className=\"form-control\" id=\"InputEmpFirstName\" aria-describedby=\"empFirstName\" />\n            </div>\n\n            {/* Emp Last Name */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputEmpLastName\" className=\"form-label\">Last Name</label>\n              <input ref={props.refEmpLastName} type=\"text\" className=\"form-control\" id=\"InputEmpLastName\" aria-describedby=\"empLastName\" />\n            </div>\n\n            {/* Email */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputEmail\" className=\"form-label\">Email</label>\n              <input ref={props.refEmpEmail} type=\"text\" className=\"form-control\" id=\"InputEmail\" aria-describedby=\"email\" />\n            </div>\n\n            {/* Phone */}\n            <div className=\"mb-3 text-center\">\n              <label htmlFor=\"InputPhone\" className=\"form-label\">Phone</label>\n              <input ref={props.refEmpPhone} type=\"text\" className=\"form-control\" id=\"InputPhone\" aria-describedby=\"email\" />\n            </div>\n\n            <div className=\"text-center\">\n              <button onClick={props.handleNewEmpSubmit} type=\"submit\" className=\"btn btn-warning my-3\">Create</button>\n            </div>\n            \n\n          </Col>\n        </Row>\n      </form>\n\n    </>\n  )\n\n\n\n}\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default NewEmpForm;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\"\nimport Col from \"../../components/Column\";\nimport Row from \"../../components/Row\";\nimport Container from \"../../components/Container\";\nimport NewClientForm from \"../../components/NewClientForm\";\nimport NewTeamForm from \"../../components/NewTeamForm\";\nimport NewEmpForm from \"../../components/NewEmpForm\";\nimport _ from \"underscore\";\n\n\n// Styling Imports\nimport './org.css';\nimport SectionHeader from \"../../components/SectionHeader\";\nimport \"../../index.css\";\n\n/* -------------------------------------------------------------------------- */\n/*                           Set Mobile BreakPoints                           */\n/* -------------------------------------------------------------------------- */\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\nfunction Org() {\n\n    /* ---------------------------------- State --------------------------------- */\n\n    const [org, setOrg] = useState(\n        {\n            org: {}\n        }\n    );\n    const [error, setError] = useState({});\n    const [teams, setTeams] = useState({});\n\n    // Call when components have loaded\n    useEffect(() => {\n        getOrg();\n        getTeams();\n        updateError(\"info\", {});\n    }, [])\n\n    /* -------------- Button Characteristics and highlight handling ------------- */\n    // Related State\n    const [isClientShowing, setIsClientShowing] = useState(false)\n    const [isTeamShowing, setIsTeamShowing] = useState(false)\n    const [isEmployeeShowing, setIsEmployeeShowing] = useState(false)\n\n     // Show Ticket Details\n     function makeClientActive () {\n        setIsClientShowing(prevCheck => !prevCheck)\n        setIsTeamShowing(false);\n        setIsEmployeeShowing(false);\n    }\n\n    // Show Client Details\n    function makeTeamActive () {\n        setIsTeamShowing(prevCheck => !prevCheck)\n        setIsClientShowing(false);\n        setIsEmployeeShowing(false);\n    }\n\n    // Show Client Details\n    function makeEmployeeActive () {\n        setIsEmployeeShowing(prevCheck => !prevCheck)\n        setIsClientShowing(false);\n        setIsTeamShowing(false);\n    }\n    \n    /* ----------------------------- Component Logic ---------------------------- */\n\n    function getTeams() {\n        API.getAllOrgTeams()\n            .then(res => {\n                console.log(\"==============\");\n                console.log(res.data);\n                setTeams(res.data)\n            }).catch((err) => {\n                console.log(err);\n            })\n\n    }\n\n    // Set the error state\n    function updateError(type, error) {\n        // If error, set error\n        if (type === \"error\") {\n            let message;\n\n            if (error.type === \"unique violation\" && error.message.includes(\"email\")) {\n                error.message = \"Email already in use!\"\n            } else if (error.type === \"unique violation\" && error.message.includes(\"phone\")) {\n                error.message = \"Phone number already in use!\"\n            } else if (error.type === \"unique violation\" && error.message.includes(\"name\")) {\n                error.message = \"Firm name already in use!\"\n            }\n\n            setError({\n                visible: true,\n                message: error.message,\n                color: \"danger\"\n            })\n\n        } else if (type === \"info\") {\n\n            setError({\n                visible: true,\n                message: error.message,\n                color: \"success\"\n            })\n        }\n\n    }\n\n    // Set the user state\n    function getOrg() {\n        API.getOrg()\n            .then(res => {\n                setOrg(res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n    // Used to help display the proper forms\n    const [visible, setVisible] = useState(\n        {\n            client: false,\n            team: false,\n            emp: false,\n        }\n    );\n\n    // Show/hide the form for the respective button clicked\n    const handleCreateClick = (e) => {\n        e.preventDefault();\n\n        // Handle Button Color\n        if (e.target.id===\"client\") {\n            makeClientActive();\n        }\n        else if (e.target.id===\"team\") {\n            makeTeamActive()\n        }\n        else if (e.target.id===\"emp\") {\n            makeEmployeeActive();\n        }\n\n        // Handle Form Display\n        let temp = { ...visible }\n\n        if (temp[e.target.id]) {\n            temp = _.mapObject({ ...visible }, () => false)\n        } else {\n            temp = _.mapObject({ ...visible }, () => false)\n            temp[e.target.id] = true\n        }\n\n        // Clear info div\n        updateError(\"info\", {});\n\n        // Grab Team Data\n        getTeams();\n\n        // Make form visible\n        setVisible(temp)\n    }\n\n    // Ref Variables - New Client Form\n    let refFirm = React.createRef();\n    let refFirstName = React.createRef();\n    let refLastName = React.createRef();\n    let refEmail = React.createRef();\n    let refPhone = React.createRef();\n    let refAdd1 = React.createRef();\n    let refAdd2 = React.createRef();\n    let refCity = React.createRef();\n    let refState = React.createRef();\n    let refZip = React.createRef();\n\n    // Handle new client button\n    const handleNewClientSubmit = (e) => {\n        e.preventDefault();\n\n        // Create form input data object\n        const newClient = {\n            name: refFirm.current.value,\n            first_name: refFirstName.current.value,\n            last_name: refLastName.current.value,\n            email: refEmail.current.value,\n            phone_number: refPhone.current.value,\n            add1: refAdd1.current.value,\n            add2: refAdd2.current.value,\n            city: refCity.current.value,\n            state: refState.current.value,\n            zip: refZip.current.value\n        }\n\n        // If you have filled out all the form fields...\n        if (refFirm.current.value\n            && refFirstName.current.value\n            && refLastName.current.value\n            && refEmail.current.value\n            && refPhone.current.value\n            && refAdd1.current.value\n            && refCity.current.value\n            && refState.current.value\n            && refZip.current.value\n        ) {\n            // Send input data to server for creation\n            API.createNewClient(newClient)\n                .then(res => {\n                    console.log(res.data);\n                    updateError(\"info\", { message: \"New client successfully created!\" })\n                })\n                .catch(err => {\n                    console.log(`========= HIT THE CATCH ============`);\n                    updateError(\"error\", JSON.parse(err.response.request.response).errors[0])\n                    console.log(err)\n                });\n        } else {\n            updateError(\"error\", { message: \"Please enter info into all fields...\" })\n            console.log(\"Clicked\");\n        }\n\n    }\n\n    let refTeamName = React.createRef();\n\n    // Handle new Team button\n    const handleNewTeamSubmit = (e) => {\n        e.preventDefault();\n        console.log(e);\n\n        if (refTeamName.current.value) {\n\n            API.createNewTeam({ name: refTeamName.current.value })\n                .then(res => {\n                    updateError(\"info\", { message: \"Team successfully created!\" });\n                })\n                .catch(err => {\n                    updateError(\"error\", JSON.parse(err.response.request.response).errors[0])\n                })\n        } else {\n            updateError(\"error\", { message: \"Please enter a Team Name.\" })\n        }\n\n    }\n\n    let refEmpFirstName = React.createRef();\n    let refEmpLastName = React.createRef();\n    let refEmpPhone = React.createRef();\n    let refEmpEmail = React.createRef();\n    let refTeamSelected = React.createRef();\n    let refIsManager = React.createRef();\n\n    // Handle New Employee Form\n    const handleNewEmpSubmit = (e) => {\n        e.preventDefault();\n\n        console.log(refTeamSelected.current.value);\n\n        const newEmployee = {\n            first_name: refEmpFirstName.current.value,\n            last_name: refEmpLastName.current.value,\n            phone_number: refEmpPhone.current.value,\n            email: refEmpEmail.current.value,\n            team_id: refTeamSelected.current.value,\n            role: \"Employee\",\n            is_manager: refIsManager.current.value\n        }\n\n        if (refEmpFirstName.current.value\n            && refEmpLastName.current.value\n            && refEmpEmail.current.value\n            && refEmpPhone.current.value\n        ) {\n            API.creatNewEmployee(newEmployee)\n                .then(res => {\n                    // console.log(res.data);\n                    updateError(\"info\", { message: \"Employee successfully created!\" });\n                })\n                .catch((err) => {\n                    updateError(\"error\", JSON.parse(err.response.request.response).errors[0])\n\n                })\n        } else {\n            updateError(\"error\", { message: \"Please fill out all fields.\" })\n        }\n\n    }\n\n\n    /* ---------------------------- Component Render ---------------------------- */\n    return (\n        <>\n\n            <Container className=\"m-3 mt-3\">\n                <Row className=\"mt-3\">\n                    <Col className=\"col-lg-8 mx-auto divvy-bg-tile shadow p-0\">\n                        <Row className=\"mb-3\">\n                            <Col className=\"p-0\">\n                                <SectionHeader>{org.org.name}</SectionHeader>\n                                <div class=\"form-text text-center\">Select an option</div>\n                            </Col>\n                        </Row>\n                        <Row className=\"mb-3 d-flex justify-content-center\">\n                            <Col className=\"text-center col-lg-3\">\n                                <div>\n                                    <button id=\"client\" onClick={handleCreateClick} className={isClientShowing ? \"btn alert-warning btn text-center\" : \"btn btn-light btn text-center\"}>New Client</button>\n                                </div>\n                            </Col>\n                            <Col className=\"text-center col-lg-3\">\n                                <div>\n                                    <button id=\"team\" onClick={handleCreateClick} className={isTeamShowing ? \"btn alert-warning btn text-center\" : \"btn btn-light btn text-center\"}>New Team</button>\n                                </div>\n                            </Col>\n                            <Col className=\"text-center col-lg-3\">\n                                <div>\n                                    <button id=\"emp\" onClick={handleCreateClick} className={isEmployeeShowing ? \"btn alert-warning btn text-center\" : \"btn btn-light btn text-center\"}>New Employee</button>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {visible.client ? <NewClientForm\n                                    handleNewClientSubmit={handleNewClientSubmit}\n                                    refFirm={refFirm}\n                                    refFirstName={refFirstName}\n                                    refLastName={refLastName}\n                                    refEmail={refEmail}\n                                    refPhone={refPhone}\n                                    refAdd1={refAdd1}\n                                    refAdd2={refAdd2}\n                                    refCity={refCity}\n                                    refState={refState}\n                                    refZip={refZip}\n                                /> : null}\n\n                                {visible.team ? <NewTeamForm\n                                handleNewTeamSubmit={handleNewTeamSubmit}\n                                refTeamName={refTeamName}\n                                /> : null}\n\n                                {visible.emp ? <NewEmpForm\n                                handleNewEmpSubmit={handleNewEmpSubmit}\n                                refEmpFirstName={refEmpFirstName}\n                                refEmpLastName={refEmpLastName}\n                                refEmpEmail={refEmpEmail}\n                                refEmpPhone={refEmpPhone}\n                                teams={teams}\n                                refTeamSelected={refTeamSelected}\n                                refIsManager={refIsManager}\n                                /> : null}\n                                {error.visible ? <div className={`mb-2 text-center text-${error.color}`} >{error.message}</div> : <div className=\"mb-2 text-center\"></div>}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>   \n            </Container>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Org;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React from \"react\";\nimport { useMediaQuery } from 'react-responsive';\n\n\n/* -------------------------------------------------------------------------- */\n/*                           Set Mobile BreakPoints                           */\n/* -------------------------------------------------------------------------- */\n\n// Will render mobile friendly nav, horizontal with diff layout\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 1025 })\n    return isMobile ? children : null\n}\n\n// Will render desktop friendly nav, vertical nav\nconst Default = ({ children }) => {\n    const isNotMobile = useMediaQuery({ minWidth: 1026 })\n    return isNotMobile ? children : null\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Define Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    This page component will render all our stuff below it within the bs container\n    class for spacing. This is our whitespace for making the UI alongside\n    the navbar. \n*/\n\n\nfunction Team() {\n\n    /* ---------------------------- Component Render ---------------------------- */\n    return (\n        <>\n            <h1>Team Page</h1>\n        </>\n    );\n}\n\n/* -------------------------------------------------------------------------- */\n/*                            Export Page Component                           */\n/* -------------------------------------------------------------------------- */\n\n/*\n    Exported for import within app.js\n*/\n\nexport default Team;","/* -------------------------------------------------------------------------- */\n/*                             Import Dependencies                            */\n/* -------------------------------------------------------------------------- */\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Wrapper from \"./components/Wrapper\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\"\nimport Dashboard from \"./pages/Dashboard\";\nimport Org from \"./pages/Org\";\nimport Team from \"./pages/Team\";\nimport './index.css';\nimport API from \"./utils/API\";\n\n/* -------------------------------------------------------------------------- */\n/*                              Define Component                              */\n/* -------------------------------------------------------------------------- */\n\nfunction App() {\n\n   // set current user\n   const [currentUser, setCurrentUser] = useState({})\n\n  // Set login status\n  const [loggedIn, setloggedIn] = useState({ loggedIn: false });\n\n  function handleLogout() {\n    console.log(\"App.js (handleLogout: \");\n    API.logout()\n      .then(response => {\n        console.log(\"logout API: \", response.data);\n        setloggedIn({ loggedIn: false });\n      })\n      .catch(error => {\n        console.log(\"check login error\", error);\n      });\n  }\n\n  // Call when components have loaded\n  useEffect(() => {\n    withAuth();\n  }, [false])\n\n  function withAuth() {\n    API.checkAuth()\n      .then(response => {\n        console.log(\"front-end\", response.data);\n        if (response.data) {\n          setloggedIn({ loggedIn: response.data });\n        };\n      })\n      .catch(error => {\n        console.log(\"check login error\", error);\n      });\n  }\n  const { loggedIn: logStatus } = loggedIn;\n  //console.log(\"App.js: \", logStatus);\n\n  // Call when components have loaded\n  useEffect(() => {\n    getCurrentUser();\n  }, [])\n\n  // Set current User State\n  function getCurrentUser() {\n    API.getCurrentUser()\n      .then(res => {\n        console.log(\"APP.js CURRENT USER\", res.data);\n        setCurrentUser(res.data);\n      }\n      )\n  }\n\n  return (\n    <Router>\n      <div data-component=\"DivInRouter\" className=\"my-0\">\n        <Wrapper data-component=\"Wrapper\"\n          handleLogout={handleLogout}\n          currentUser={currentUser}\n          loggedInStatus={loggedIn}\n        >\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/login\" component={Login}></Route>\n            <Route exact path=\"/signup\" component={Signup}></Route>\n            {logStatus ?\n              <>\n                {/* <Route exact path=\"/logout\" component={Logout}></Route> */}\n                <Route exact path=\"/dashboard\" component={Dashboard}></Route>\n                <Route exact path=\"/org\" component={Org}></Route>\n                <Route exact path=\"/team\" component={Team}></Route>\n                <Route exact path=\"/profile\" component={Profile} ></Route>\n              </> :\n              <Route path=\"\" component={Home} ></Route>\n            }\n          </Switch>\n        </Wrapper>\n      </div>\n    </Router >\n  );\n}\n\n\n/* -------------------------------------------------------------------------- */\n/*                              Export Component                              */\n/* -------------------------------------------------------------------------- */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}